diff -dur /root/3.2/wanpipe/util/wanpipemon/aftpipemon.c /root/3.3/wanpipe/util/wanpipemon/aftpipemon.c
--- /root/3.2/wanpipe/util/wanpipemon/aftpipemon.c	2008-01-11 14:07:46.000000000 -0500
+++ /root/3.3/wanpipe/util/wanpipemon/aftpipemon.c	2008-03-24 15:07:01.000000000 -0400
@@ -19,17 +19,19 @@
 #include <stdio.h>
 #include <stddef.h>	/* offsetof(), etc. */
 #include <ctype.h>
+#include <unistd.h>
+#include <string.h>
+#include <stdlib.h>
 #include <time.h>
+#if defined(__FreeBSD__)
+# include <limits.h>
+#endif
 #include <sys/time.h>
 #include <sys/types.h>
-#include <unistd.h>
 #include <sys/socket.h>
-#include <netinet/in.h>
-#include <net/if.h>
 #include <sys/ioctl.h>
-#include <string.h>
-#include <stdlib.h>
 #include <arpa/inet.h>
+#include <net/if.h>
 #include <netinet/in_systm.h>
 #include <netinet/in.h>
 #include <netinet/ip.h>
@@ -42,13 +44,11 @@
 # include <linux/if_ether.h>
 # include <linux/wanpipe_defines.h>
 # include <linux/wanpipe_cfg.h>
-# include <linux/wanpipe_abstr.h>
 # include <linux/wanpipe.h>
 # include <linux/sdla_xilinx.h>
 #else
 # include <wanpipe_defines.h>
 # include <wanpipe_cfg.h>
-# include <wanpipe_abstr.h>
 # include <wanpipe.h>
 # include <sdla_xilinx.h>
 #endif
@@ -218,7 +218,7 @@
 
 	is_508 = WAN_FALSE;
    
-	strcpy(codeversion, "?.??");
+	strlcpy(codeversion, "?.??",10);
    
 	wan_udp.wan_udphdr_command = READ_CODE_VERSION;
 	wan_udp.wan_udphdr_data_len = 0;
@@ -226,7 +226,7 @@
 	DO_COMMAND(wan_udp);
 	if (wan_udp.wan_udphdr_return_code == 0) {
 		wan_udp.wan_udphdr_data[wan_udp.wan_udphdr_data_len] = 0;
-		strcpy(codeversion, (char*)wan_udp.wan_udphdr_data);
+		strlcpy(codeversion, (char*)wan_udp.wan_udphdr_data,10);
 	}
 	
 	return(WAN_TRUE);
@@ -439,7 +439,7 @@
 	return 0;
 }
 
-static int print_local_time (char *date_string)
+static int print_local_time (char *date_string, int max_len)
 {
 	
   	char tmp_time[50];
@@ -454,19 +454,19 @@
 	time_tm=localtime(&time_val);
 
 	strftime(tmp_time,sizeof(tmp_time),"%b",time_tm);
-	sprintf(date_string, " %s ",tmp_time);
+	snprintf(date_string, max_len, " %s ",tmp_time);
 
 	strftime(tmp_time,sizeof(tmp_time),"%d",time_tm);
-	sprintf(date_string+strlen(date_string), "%s ",tmp_time);
+	snprintf(date_string+strlen(date_string), max_len-strlen(date_string), "%s ",tmp_time);
 
 	strftime(tmp_time,sizeof(tmp_time),"%H",time_tm);
-	sprintf(date_string+strlen(date_string), "%s:",tmp_time);
+	snprintf(date_string+strlen(date_string), max_len-strlen(date_string), "%s:",tmp_time);
 
 	strftime(tmp_time,sizeof(tmp_time),"%M",time_tm);
-	sprintf(date_string+strlen(date_string), "%s:",tmp_time);
+	snprintf(date_string+strlen(date_string), max_len-strlen(date_string), "%s:",tmp_time);
 
 	strftime(tmp_time,sizeof(tmp_time),"%S",time_tm);
-	sprintf(date_string+strlen(date_string), "%s",tmp_time);
+	snprintf(date_string+strlen(date_string), max_len-strlen(date_string), "%s",tmp_time);
 
 	return 0;
 }
@@ -485,7 +485,7 @@
 	to.tv_sec = 0;
 	to.tv_usec = 0;
 	
-	print_local_time(date_string);
+	print_local_time(date_string,100);
 		
 	printf("%s | Test %04i | ",
 		date_string, passnum);
@@ -586,6 +586,7 @@
 }
 
 
+		
 static int aft_digital_loop_test( void )
 {
 	int passnum=0;
@@ -844,41 +845,86 @@
 
 static int aft_remora_tones(int mod_no)
 {
-
+	int	cnt = 0;
+	char	ch;
 	/* Disable trace to ensure that the buffers are flushed */
 	wan_udp.wan_udphdr_command	= WAN_FE_TONES;
 	wan_udp.wan_udphdr_return_code	= 0xaa;
-	wan_udp.wan_udphdr_data_len	= 1;
+	wan_udp.wan_udphdr_data_len	= 2;
 	wan_udp.wan_udphdr_data[0]	= mod_no;
+	wan_udp.wan_udphdr_data[1]	= 1;
 	DO_COMMAND(wan_udp);
 
 	if (wan_udp.wan_udphdr_return_code) { 
-		printf("Failed to play the AFT Remora tones!\n"); 
+		printf("Failed to start tone on Module %d!\n", mod_no); 
 		fflush(stdout);
 		return 0;
 	}
 
-	fflush(stdout);
+	printf("Press enter to stop the tone ...");fflush(stdout);ch=getchar();
+tone_stop_again:
+	/* Disable A200/A400 Ring event */
+	wan_udp.wan_udphdr_command	= WAN_FE_TONES;
+	wan_udp.wan_udphdr_return_code	= 0xaa;
+	wan_udp.wan_udphdr_data_len	= 2;
+	wan_udp.wan_udphdr_data[0]	= mod_no;
+	wan_udp.wan_udphdr_data[1]	= 0;
+	DO_COMMAND(wan_udp);
+
+	if (wan_udp.wan_udphdr_return_code) {
+		if (cnt++ > 10){
+			sleep(1);
+			goto tone_stop_again;
+		} 
+		printf("Failed to stop tone on Module %d (timeout)!\n",
+					mod_no); 
+		fflush(stdout);
+		return 0;
+	}
 	return 0;
 }
 
 static int aft_remora_ring(int mod_no)
 {
+	int	cnt=0;
+	char	ch;
 
-	/* Disable trace to ensure that the buffers are flushed */
+	/* Enable A200/A400 Ring event */
 	wan_udp.wan_udphdr_command	= WAN_FE_RING;
 	wan_udp.wan_udphdr_return_code	= 0xaa;
-	wan_udp.wan_udphdr_data_len	= 1;
+	wan_udp.wan_udphdr_data_len	= 2;
 	wan_udp.wan_udphdr_data[0]	= mod_no;
+	wan_udp.wan_udphdr_data[1]	= 1;
 	DO_COMMAND(wan_udp);
 
 	if (wan_udp.wan_udphdr_return_code) { 
-		printf("Failed to ring the module!\n"); 
+		printf("Failed to start ring for Module %d!\n", mod_no); 
 		fflush(stdout);
 		return 0;
 	}
+	fflush(stdout);
 
+	printf("Press enter to stop the ring ...");fflush(stdout);ch=getchar();
+ring_stop_again:
+	/* Disable A200/A400 Ring event */
+	wan_udp.wan_udphdr_command	= WAN_FE_RING;
+	wan_udp.wan_udphdr_return_code	= 0xaa;
+	wan_udp.wan_udphdr_data_len	= 2;
+	wan_udp.wan_udphdr_data[0]	= mod_no;
+	wan_udp.wan_udphdr_data[1]	= 0;
+	DO_COMMAND(wan_udp);
+
+	if (wan_udp.wan_udphdr_return_code) { 
+		if (cnt++ > 10){
+			sleep(1);
+			goto ring_stop_again;
+		} 
+		printf("Failed to stop ring for Module %d (timeout)!\n", mod_no); 
+		fflush(stdout);
+		return 0;
+	}
 	fflush(stdout);
+
 	return 0;
 }
 
@@ -972,6 +1018,17 @@
 }
 
 
+static int aft_remora_hook(int mod_no, int offhook)
+{
+	sdla_fe_debug_t	fe_debug;
+
+	fe_debug.type			= WAN_FE_DEBUG_HOOK;
+	fe_debug.mod_no			= mod_no;
+	fe_debug.fe_debug_hook.offhook	= offhook;
+	aft_remora_debug_mode(&fe_debug);
+	return 0;
+}
+
 //CORBA
 int AFTUsage(void)
 {
@@ -1008,14 +1065,22 @@
 	printf("\tT1/E1 Configuration/Statistics\n");
 	printf("\t   T         a       Read T1/E1/56K alarms.\n"); 
 	printf("\t             lt      Diagnostic Digital Loopback testing (T1/E1 card only)\n"); 
-	printf("\t             allb    Active Line Loopback mode (T1/E1 card only)\n");  
-	printf("\t             dllb    Deactive Line Loopback mode (T1/E1 card only)\n");  
-	printf("\t             aplb    Active Payload Loopback mode (T1/E1 card only)\n");  
-	printf("\t             dplb    Deactive Payload Loopback mode (T1/E1 card only)\n");  
-	printf("\t             adlb    Active Diagnostic Digital Loopback mode (T1/E1 card only)\n");  
-	printf("\t             ddlb    Deactive Diagnostic Digital Loopback mode (T1/E1 card only)\n");  
-	printf("\t             salb    Send Loopback Activate Code (T1/E1 card only)\n");  
-	printf("\t             sdlb    Send Loopback Deactive Code (T1/E1 card only)\n");  
+	printf("\t             allb    Active Line/Remote Loopback mode (T1/E1/T3/E3 cards)\n");  
+	printf("\t             dllb    Deactive Line/Remote Loopback mode (T1/E1/T3/E3 cards)\n");  
+	printf("\t             aplb    Active Payload Loopback mode (T1/E1/T3/E3 cards)\n");  
+	printf("\t             dplb    Deactive Payload Loopback mode (T1/E1/T3/E3 cards)\n");  
+	printf("\t             adlb    Active Diagnostic Digital Loopback mode (T1/E1/T3/E3 cards)\n");  
+	printf("\t             ddlb    Deactive Diagnostic Digital Loopback mode (T1/E1/T3/E3 cards)\n");  
+	printf("\t             salb    Send Loopback Activate Code (T1/E1 PMC card only)\n");  
+	printf("\t             sdlb    Send Loopback Deactive Code (T1/E1 PMC card only)\n");  
+	printf("\t             alalb   Active LIU Analog Loopback mode (T1/E1 DM card only)\n");  
+	printf("\t             dlalb   Deactive LIU Analog Loopback mode (T1/E1 DM card only)\n");  
+	printf("\t             alllb   Active LIU Local Loopback mode (T1/E1 DM card only)\n");  
+	printf("\t             dlllb   Deactive LIU Local Loopback mode (T1/E1 DM card only)\n");  
+	printf("\t             alrlb   Active LIU Remote Loopback mode (T1/E1 DM card only)\n");  
+	printf("\t             dlrlb   Deactive LIU Remote Loopback mode (T1/E1 DM card only)\n");  
+	printf("\t             aldlb   Active LIU Dual Loopback mode (T1/E1 DM card only)\n");  
+	printf("\t             dldlb   Deactive LIU Dual Loopback mode (T1/E1 DM card only)\n");
 	printf("\t             txe     Enable TX (AFT card only)\n");  
 	printf("\t             txd     Disable TX (AFT card only)\n");  
 	printf("\tFlush Statistics\n");
@@ -1193,6 +1258,30 @@
 				set_lb_modes(WAN_TE1_TX_LB_MODE, WAN_TE1_ACTIVATE_LB);
 			}else if (!strcmp(opt,"sdlb")){
 				set_lb_modes(WAN_TE1_TX_LB_MODE, WAN_TE1_DEACTIVATE_LB);
+			}else if (!strcmp(opt,"alalb")){
+				set_lb_modes(WAN_TE1_LIU_ALB_MODE, WAN_TE1_ACTIVATE_LB);
+			}else if (!strcmp(opt,"dlalb")){
+				set_lb_modes(WAN_TE1_LIU_ALB_MODE, WAN_TE1_DEACTIVATE_LB);
+			}else if (!strcmp(opt,"alllb")){
+				set_lb_modes(WAN_TE1_LIU_LLB_MODE, WAN_TE1_ACTIVATE_LB);
+			}else if (!strcmp(opt,"dlllb")){
+				set_lb_modes(WAN_TE1_LIU_LLB_MODE, WAN_TE1_DEACTIVATE_LB);
+			}else if (!strcmp(opt,"alrlb")){
+				set_lb_modes(WAN_TE1_LIU_RLB_MODE, WAN_TE1_ACTIVATE_LB);
+			}else if (!strcmp(opt,"dlrlb")){
+				set_lb_modes(WAN_TE1_LIU_RLB_MODE, WAN_TE1_DEACTIVATE_LB);
+			}else if (!strcmp(opt,"aldlb")){
+				set_lb_modes(WAN_TE1_LIU_DLB_MODE, WAN_TE1_ACTIVATE_LB);
+			}else if (!strcmp(opt,"dldlb")){
+				set_lb_modes(WAN_TE1_LIU_DLB_MODE, WAN_TE1_DEACTIVATE_LB);
+			}else if (!strcmp(opt,"aflb")){
+				set_lb_modes(WAN_TE1_FR_FLB_MODE, WAN_TE1_ACTIVATE_LB);
+			}else if (!strcmp(opt,"dflb")){
+				set_lb_modes(WAN_TE1_FR_FLB_MODE, WAN_TE1_DEACTIVATE_LB);
+			}else if (!strcmp(opt,"afplb")){
+				set_lb_modes(WAN_TE1_FR_PLB_MODE, WAN_TE1_ACTIVATE_LB);
+			}else if (!strcmp(opt,"dfplb")){
+				set_lb_modes(WAN_TE1_FR_PLB_MODE, WAN_TE1_DEACTIVATE_LB);
 			}else if (!strcmp(opt,"a")){
 				read_te1_56k_stat(0);
 			}else if (!strcmp(opt,"af")){
@@ -1261,7 +1350,7 @@
 				fe_debug.type = WAN_FE_DEBUG_RECONFIG;
 				set_fe_debug_mode(&fe_debug);
 			}else if (!strcmp(opt,"reg")){
-				int	value;
+				long	value;
 				fe_debug.type = WAN_FE_DEBUG_REG;
 				if (argc < 6){
 					printf("ERROR: Invalid command argument!\n");
@@ -1325,8 +1414,39 @@
 				aft_remora_ring(mod_no);
 			}else if (strcmp(opt,"regdump") == 0){	
 				aft_remora_regdump(mod_no);
+			}else if (!strcmp(opt,"reg")){
+				long	value;
+				fe_debug.type = WAN_FE_DEBUG_REG;
+				if (argc < 6){
+					printf("ERROR: Invalid command argument!\n");
+					break;				
+				}
+				value = strtol(argv[5],(char**)NULL, 10);
+				if (value == LONG_MIN || value == LONG_MAX){
+					printf("ERROR: Invalid argument 5: %s!\n",
+								argv[5]);
+					break;				
+				}
+				fe_debug.fe_debug_reg.reg  = value;
+				fe_debug.fe_debug_reg.read = 1;
+				if (strcmp(argv[6], "-m") && argc > 6){
+					value = strtol(argv[6],(char**)NULL, 16);
+					if (value == LONG_MIN || value == LONG_MAX){
+						printf("ERROR: Invalid argument 6: %s!\n",
+									argv[6]);
+						break;
+					}
+					fe_debug.fe_debug_reg.read = 0;
+					fe_debug.fe_debug_reg.value = value;
+				}
+				fe_debug.mod_no = mod_no;
+				aft_remora_debug_mode(&fe_debug);
 			}else if (strcmp(opt,"stats") == 0){	
 				aft_remora_stats(mod_no);
+			}else if (strcmp(opt,"offhook") == 0){	
+				aft_remora_hook(mod_no, 1);
+			}else if (strcmp(opt,"onhook") == 0){	
+				aft_remora_hook(mod_no, 0);
 			}else{
 				printf("ERROR: Invalid Status Command 'a', Type wanpipemon <cr> for help\n\n");
 			}
Binary files /root/3.2/wanpipe/util/wanpipemon/aftpipemon.o and /root/3.3/wanpipe/util/wanpipemon/aftpipemon.o differ
diff -dur /root/3.2/wanpipe/util/wanpipemon/atmpipemon.c /root/3.3/wanpipe/util/wanpipemon/atmpipemon.c
--- /root/3.2/wanpipe/util/wanpipemon/atmpipemon.c	2008-01-11 14:07:46.000000000 -0500
+++ /root/3.3/wanpipe/util/wanpipemon/atmpipemon.c	2008-01-25 11:02:24.000000000 -0500
@@ -42,13 +42,11 @@
 # include <linux/if_ether.h>
 # include <linux/wanpipe_defines.h>
 # include <linux/wanpipe_cfg.h>
-# include <linux/wanpipe_abstr.h>
 # include <linux/wanpipe.h>
 # include <linux/sdla_atm.h>
 #else
 # include <wanpipe_defines.h>
 # include <wanpipe_cfg.h>
-# include <wanpipe_abstr.h>
 # include <wanpipe.h>
 # include <sdla_atm.h>
 #endif
@@ -160,8 +158,8 @@
 static void read_ft1_te1_56k_config( void );
 
 /* Other routines */
-static int get_cell_type(char* data, int len);
-void decode_user_data_cell(char* data, int len);
+static int get_cell_type(unsigned char* data, int len);
+void decode_user_data_cell(unsigned char* data, int len);
 
 static char *gui_main_menu[]={
 "atm_card_stats_menu","Card Status",
@@ -290,7 +288,7 @@
 		is_508 = WAN_FALSE;
 	} 
    
-	strcpy(codeversion, "?.??");
+	strlcpy(codeversion, "?.??",10);
    
 	wan_udp.wan_udphdr_command = READ_CODE_VERSION;
 	wan_udp.wan_udphdr_data_len = 0;
@@ -298,7 +296,7 @@
 	DO_COMMAND(wan_udp);
 	if (wan_udp.wan_udphdr_return_code == 0) {
 		wan_udp.wan_udphdr_data[wan_udp.wan_udphdr_data_len] = 0;
-		strcpy(codeversion, (char*)wan_udp.wan_udphdr_data);
+		strlcpy(codeversion, (char*)wan_udp.wan_udphdr_data,10);
 	}
 	
 	return(WAN_TRUE);
@@ -853,10 +851,10 @@
 						
 
 						printf("Cell Type: ");
-						switch(get_cell_type((char*)trace_pkt->data, trace_pkt->real_length))
+						switch(get_cell_type(trace_pkt->data, trace_pkt->real_length))
 						{
 						case ATM_USER_DATA_CELL:
-							decode_user_data_cell((char*)trace_pkt->data,
+							decode_user_data_cell(trace_pkt->data,
 										trace_pkt->real_length);
 							break;
 						default:
@@ -890,7 +888,7 @@
 }; /* line_trace */
 
 
-static int get_cell_type(char* data, int len)
+static int get_cell_type(unsigned char* data, int len)
 {
 	ATM_HEADER_STRUCT * atm_hdr_ptr = (ATM_HEADER_STRUCT * )data;
 	ATM_CELL_STRUCT * ATM_cell_ptr = (ATM_CELL_STRUCT * )data;
@@ -958,7 +956,7 @@
 	return ATM_UNKNOWN_CELL;
 }
 
-void decode_user_data_cell(char* data, int len)
+void decode_user_data_cell(unsigned char* data, int len)
 {
 	int i;
 	unsigned char* puchar_tmp;
diff -dur /root/3.2/wanpipe/util/wanpipemon/cpipemon.c /root/3.3/wanpipe/util/wanpipemon/cpipemon.c
--- /root/3.2/wanpipe/util/wanpipemon/cpipemon.c	2008-01-11 14:07:46.000000000 -0500
+++ /root/3.3/wanpipe/util/wanpipemon/cpipemon.c	2008-01-25 11:02:25.000000000 -0500
@@ -50,13 +50,11 @@
 # include <linux/if_ether.h>
 # include <linux/wanpipe_defines.h>
 # include <linux/wanpipe_cfg.h>
-# include <linux/wanpipe_abstr.h>
 # include <linux/wanpipe.h>
 # include <linux/sdla_chdlc.h>
 #else
 # include <wanpipe_defines.h>
 # include <wanpipe_cfg.h>
-# include <wanpipe_abstr.h>
 # include <wanpipe.h>
 # include <sdla_chdlc.h>
 #endif
@@ -288,7 +286,7 @@
 		is_508 = WAN_FALSE;
 	} 
    
-	strcpy(codeversion, "?.??");
+	strlcpy(codeversion, "?.??", 10);
    
 	wan_udp.wan_udphdr_command = READ_CHDLC_CODE_VERSION;
 	wan_udp.wan_udphdr_data_len = 0;
@@ -296,7 +294,7 @@
 	DO_COMMAND(wan_udp);
 	if (wan_udp.wan_udphdr_return_code == 0) {
 		wan_udp.wan_udphdr_data[wan_udp.wan_udphdr_data_len] = 0;
-		strcpy(codeversion, (char*)wan_udp.wan_udphdr_data);
+		strlcpy(codeversion, (char*)wan_udp.wan_udphdr_data,10);
 	}
 	
 	return(WAN_TRUE);
@@ -822,7 +820,7 @@
 	return 0;
 }
 
-static int print_local_time (char *date_string)
+static int print_local_time (char *date_string, int max_len)
 {
 	
   	char tmp_time[50];
@@ -837,19 +835,19 @@
 	time_tm=localtime(&time_val);
 
 	strftime(tmp_time,sizeof(tmp_time),"%b",time_tm);
-	sprintf(date_string, " %s ",tmp_time);
+	snprintf(date_string, max_len - strlen(date_string)," %s ",tmp_time);
 
 	strftime(tmp_time,sizeof(tmp_time),"%d",time_tm);
-	sprintf(date_string+strlen(date_string), "%s ",tmp_time);
+	snprintf(date_string+strlen(date_string), max_len - strlen(date_string),"%s ",tmp_time);
 
 	strftime(tmp_time,sizeof(tmp_time),"%H",time_tm);
-	sprintf(date_string+strlen(date_string), "%s:",tmp_time);
+	snprintf(date_string+strlen(date_string), max_len - strlen(date_string),"%s:",tmp_time);
 
 	strftime(tmp_time,sizeof(tmp_time),"%M",time_tm);
-	sprintf(date_string+strlen(date_string), "%s:",tmp_time);
+	snprintf(date_string+strlen(date_string), max_len - strlen(date_string),"%s:",tmp_time);
 
 	strftime(tmp_time,sizeof(tmp_time),"%S",time_tm);
-	sprintf(date_string+strlen(date_string), "%s",tmp_time);
+	snprintf(date_string+strlen(date_string), max_len - strlen(date_string),"%s",tmp_time);
 
 	return 0;
 }
@@ -868,7 +866,7 @@
 	to.tv_sec = 0;
 	to.tv_usec = 0;
 	
-	print_local_time(date_string);
+	print_local_time(date_string, 100);
 		
 	printf("%s | Test %04i | ",
 		date_string, passnum);
Binary files /root/3.2/wanpipe/util/wanpipemon/cpipemon.o and /root/3.3/wanpipe/util/wanpipemon/cpipemon.o differ
Only in /root/3.2/wanpipe/util/wanpipemon: diff
diff -dur /root/3.2/wanpipe/util/wanpipemon/dslpipemon.c /root/3.3/wanpipe/util/wanpipemon/dslpipemon.c
--- /root/3.2/wanpipe/util/wanpipemon/dslpipemon.c	2008-01-11 14:07:46.000000000 -0500
+++ /root/3.3/wanpipe/util/wanpipemon/dslpipemon.c	2008-01-25 11:02:26.000000000 -0500
@@ -40,7 +40,6 @@
 # include <linux/if_ether.h>
 # include <linux/wanpipe_defines.h>
 # include <linux/wanpipe_cfg.h>
-# include <linux/wanpipe_abstr.h>
 # include <linux/wanpipe.h>
 # include <linux/sdla_adsl.h>
 #else
@@ -50,7 +49,6 @@
 # include <netinet/udp.h>
 # include <wanpipe_defines.h>
 # include <wanpipe_cfg.h>
-# include <wanpipe_abstr.h>
 # include <wanpipe.h>
 # include <sdla_adsl.h>
 #endif
@@ -106,6 +104,9 @@
 static void adsl_baud_rate(void);
 static void adsl_atm_config(void);
 
+void write_register(int argc,  char* argv[]);
+void read_register(int argc,  char* argv[]);
+
 /******************************************************************************
  * 			FUNCTION DEFINITION				      *
  *****************************************************************************/
@@ -134,7 +135,7 @@
 
 	if (x >= 4) return(WAN_FALSE);
 
-	strcpy(codeversion, "?.??");
+	strlcpy(codeversion, "?.??", 10);
   
 	wan_udp.wan_udphdr_command	= ADSL_READ_DRIVER_VERSION;
 	wan_udp.wan_udphdr_data_len 	= 0;
@@ -142,7 +143,7 @@
 	DO_COMMAND(wan_udp);
 	if (wan_udp.wan_udphdr_return_code == 0){
 		wan_udp.wan_udphdr_data[wan_udp.wan_udphdr_data_len] = 0;
-		strcpy(codeversion, (char*)wan_udp.wan_udphdr_data);
+		strlcpy(codeversion, (char*)wan_udp.wan_udphdr_data, 10);
 	}
 	protocol_cb_size=sizeof(wan_mgmt_t) + sizeof(wan_cmd_t) + sizeof(wan_trace_info_t) + 1;
 	return WAN_TRUE;
@@ -465,30 +466,36 @@
 				
 				/*  frame type */
 				if (trace_pkt->status & 0x01) {
-					sprintf(outstr,"\nOUTGOING\t");
+					snprintf(outstr,MAX_TRACE_BUF,"\nOUTGOING\t");
 				} else {
 					if (trace_pkt->status & 0x10) { 
-						sprintf(outstr,"\nINCOMING - Aborted\t");
+						snprintf(outstr,MAX_TRACE_BUF,"\nINCOMING - Aborted\t");
 					} else if (trace_pkt->status & 0x20) {
-						sprintf(outstr,"\nINCOMING - CRC Error\t");
+						snprintf(outstr,MAX_TRACE_BUF,"\nINCOMING - CRC Error\t");
 					} else if (trace_pkt->status & 0x40) {
-						sprintf(outstr,"\nINCOMING - Overrun Error\t");
+						snprintf(outstr,MAX_TRACE_BUF,"\nINCOMING - Overrun Error\t");
 					} else {
-						sprintf(outstr,"\nINCOMING\t");
+						snprintf(outstr,MAX_TRACE_BUF,"\nINCOMING\t");
 					}
 				}
 
 				/* real length and time stamp */
-				sprintf(outstr+strlen(outstr), "Len=%-5u\tTimestamp=%-5u\t", 
+				snprintf(outstr+strlen(outstr), 
+					MAX_TRACE_BUF-strlen(outstr),
+					"Len=%-5u\tTimestamp=%-5u\t", 
 				     trace_pkt->real_length, trace_pkt->time_stamp);
 
 				/* first update curr_pos */
 				curr_pos += sizeof(wan_trace_pkt_t);
 				if (trace_pkt->real_length >= WAN_MAX_DATA_SIZE){
-					sprintf( outstr+strlen(outstr), "\t:the frame data is to big (%u)!",
+					snprintf( outstr+strlen(outstr), 
+						MAX_TRACE_BUF-strlen(outstr),
+						"\t:the frame data is to big (%u)!",
 										trace_pkt->real_length);
 				}else if (trace_pkt->data_avail == 0) {
-					sprintf( outstr+strlen(outstr), "\t:the frame data is not available" );
+					snprintf( outstr+strlen(outstr), 
+						MAX_TRACE_BUF-strlen(outstr),
+						"\t:the frame data is not available" );
 				}else{
 					/* update curr_pos again */
 					curr_pos += trace_pkt->real_length;
@@ -508,55 +515,57 @@
 					}
 
 					count = 0;
-					sprintf(outstr+strlen(outstr),"\n\t\t");
+					snprintf(outstr+strlen(outstr),
+						MAX_TRACE_BUF-strlen(outstr),
+						"\n\t\t");
 				        for( j=0; j<num_chars; j++ ) {
 						count ++;
 
 						if (trace_opt != 2){
 							if (count == 15){
-								sprintf(outstr+strlen(outstr),"\n\t\t");
+								snprintf(outstr+strlen(outstr),MAX_TRACE_BUF-strlen(outstr),"\n\t\t");
 							}else if (count == 35){
-								sprintf(outstr+strlen(outstr),"\n\t\t");
+								snprintf(outstr+strlen(outstr),MAX_TRACE_BUF-strlen(outstr),"\n\t\t");
 								count=40;
 							}else if (count>40 && !(count%20)){
-								sprintf(outstr+strlen(outstr),"\n\t\t");
+								snprintf(outstr+strlen(outstr),MAX_TRACE_BUF-strlen(outstr),"\n\t\t");
 							}
 						}else{
 							if (count == 5){
 
 								/*
-								sprintf(outstr+strlen(outstr)," %x %x %x %x",
+								snprintf(outstr+strlen(outstr),MAX_TRACE_BUF-strlen(outstr)," %x %x %x %x",
 								trace_pkt->data[j-3],
 								trace_pkt->data[j-2],
 								trace_pkt->data[j-1],
 								trace_pkt->data[j-0]);
 								*/
 							
-								sprintf(outstr+strlen(outstr),"\tVpi=%d",
+								snprintf(outstr+strlen(outstr),MAX_TRACE_BUF-strlen(outstr),"\tVpi=%d",
 								trace_pkt->data[j-4]<<4 |
 								(trace_pkt->data[j-3]&0xF0)>>4);
 
-								sprintf(outstr+strlen(outstr),"\tVci=%d",
+								snprintf(outstr+strlen(outstr),MAX_TRACE_BUF-strlen(outstr),"\tVci=%d",
 								(trace_pkt->data[j-3]&0x0F)<<12 |
 								(trace_pkt->data[j-2]<<4)|
 								(trace_pkt->data[j-1]&0xF0)>>4);
 						
 								
-								sprintf(outstr+strlen(outstr),"\n\t\t");
+								snprintf(outstr+strlen(outstr),MAX_TRACE_BUF-strlen(outstr),"\n\t\t");
 								count=20;
 								
 							}else if (count>20 && !(count%20)){
-								sprintf(outstr+strlen(outstr),"\n\t\t");
+								snprintf(outstr+strlen(outstr),MAX_TRACE_BUF-strlen(outstr),"\n\t\t");
 							}
 						}
 						
-						sprintf(outstr+strlen(outstr), 
-							"%02X ", 
+						snprintf(outstr+strlen(outstr), 
+							MAX_TRACE_BUF-strlen(outstr),"%02X ", 
 							(unsigned char)trace_pkt->data[j]);
 				        }
 
 					if (num_chars < trace_pkt->real_length){
-						sprintf(outstr+strlen(outstr),".. ");
+						snprintf(outstr+strlen(outstr),MAX_TRACE_BUF-strlen(outstr),".. ");
 		          		}
 
 					outstr[strlen(outstr)-1] = '\0';
@@ -965,8 +974,77 @@
 	return cmd_menu;
 }
 
+void write_register(int argc,  char* argv[])
+{
+	int i;
+	unsigned int offset=0;
+	unsigned int data=0;
+	int cnt=0;
+
+	for (i = 0; i < argc; i++){
+		if (!strcmp(argv[i],"-offset")){
+			if (argc > (i+1)) {
+				sscanf(argv[i+1],"%x",&offset);
+				cnt++;
+			} 
+		} else if (!strcmp(argv[i],"-data")){
+			if (argc > (i+1)) {
+				sscanf(argv[i+1],"%x",&data);
+				cnt++;
+			} 
+		}
+	}
+
+	if (cnt != 2) {
+		printf ("Error usage: wanpipemon -i <ifname> -c cwr -offset <hex val> -data <hex val>\n");
+		return;
+	}
+
+	wan_udp.wan_udphdr_command= ADSL_EEPROM_WRITE;
+	wan_udp.wan_udphdr_return_code = 0xaa;
+     	wan_udp.wan_udphdr_data_len = 2;
+     	wan_udp.wan_udphdr_data[0] =offset;
+	wan_udp.wan_udphdr_data[1] = data;
+     	DO_COMMAND(wan_udp);
+
+	BANNER("WRITE REGISTER");
+
+	printf("Write Offset=0x%X Val=0x%X\n",offset,data);
+
+}
+
 
+void read_register(int argc,  char* argv[])
+{
+	int i;
+	unsigned int offset=0;
+	int cnt=0;
+
+	for (i = 0; i < argc; i++){
+		if (!strcmp(argv[i],"-offset")){
+			if (argc > (i+1)) {
+				sscanf(argv[i+1],"%x",&offset);
+				cnt++;
+			} 
+		} 
+	}
+
+	if (cnt != 1) {
+		printf ("Error usage: wanpipemon -i <ifname> -c crr -offset <hex val>\n");
+		return;
+	}
+
+	wan_udp.wan_udphdr_command= ADSL_EEPROM_READ;
+	wan_udp.wan_udphdr_return_code = 0xaa;
+     	wan_udp.wan_udphdr_data_len = 1;
+     	wan_udp.wan_udphdr_data[0] =offset;
+     	DO_COMMAND(wan_udp);
+
+	BANNER("READ REGISTER");
+
+	printf("Read Offset=0x%X Val=0x%X\n",offset,wan_udp.wan_udphdr_data[0]);
 
+}
 
 int ADSLMain(char* command, int argc, char* argv[])
 {
@@ -996,6 +1074,10 @@
 				interleave_status();
 			}else if (!strcmp(opt,"rvi")){
 				remove_vendor_id();	
+			}else if (!strcmp(opt,"wr")){
+				write_register(argc,argv);
+			}else if (!strcmp(opt,"rr")){
+				read_register(argc,argv);
 			}else{
 				printf("ERROR: Invalid Status Command 'c', Type wanpipemon <cr> for help\n\n");
 			}
Binary files /root/3.2/wanpipe/util/wanpipemon/dslpipemon.o and /root/3.3/wanpipe/util/wanpipemon/dslpipemon.o differ
diff -dur /root/3.2/wanpipe/util/wanpipemon/fe_lib.c /root/3.3/wanpipe/util/wanpipemon/fe_lib.c
--- /root/3.2/wanpipe/util/wanpipemon/fe_lib.c	2008-02-06 13:29:31.000000000 -0500
+++ /root/3.3/wanpipe/util/wanpipemon/fe_lib.c	2008-03-07 13:35:25.000000000 -0500
@@ -82,17 +82,24 @@
  * 			GUI MENU DEFINITION				      *
  *****************************************************************************/
 
-
 char *csudsu_menu[]={
 "","-- TE3/TE1/56K (S514-4-5-7-8/AFT) Stats --",
 ""," ",
-"Ta","Read TE3/TE1/56K alarms", 
-"Tallb","E Line Loopback",  
-"Tdllb","D Line Loopback",  
-"Taplb","E Payload Loopback",  
-"Tdplb","D Payload Loopback",  
-"Tadlb","E Diag Digital Loopback",  
-"Tddlb","D Diag Digital Loopback",  
+"Ta","Read TE3/TE1/56K alarms",
+"Tallb","E Line/Remote Loopback T1/E1/DS3/E3",
+"Tdllb","D Line/Remote Loopback T1/E1/DS3/E3",
+"Taplb","E Payload Loopback T1/E1/DS3/E3",
+"Tdplb","D Payload Loopback T1/E1/DS3/E3",
+"Tadlb","E Diag Digital Loopback T1/E1/DS3/E3",
+"Tddlb","D Diag Digital Loopback T1/E1/DS3/E3",
+"Talalb","E LIU Analog Loopback T1/E1-DM",
+"Tdlalb","D LIU Analog Loopback T1/E1-DM",
+"Talllb","E LIU Local Loopback T1/E1-DM",
+"Tdlllb","D LIU Local Loopback T1/E1-DM",
+"Talrlb","E LIU Remote Loopback T1/E1-DM",
+"Tdlrlb","D LIU Remote Loopback T1/E1-DM",
+"Taldlb","E LIU Dual Loopback T1/E1-DM",
+"Tdldlb","D LIU Dual Loopback T1/E1-DM",
 "Tsalb","Send Loopback Activate Code",  
 "Tsdlb","Send Loopback Deactive Code",  
 "Tread","Read CSU/DSU cfg",
@@ -830,7 +837,7 @@
 			(mode == WAN_TE1_ACTIVATE_LB) ? "activate" : "deactivate");
 	}else{
 		printf("%s mode is %s!\n",
-			WAN_TE1_LB_TYPE_DECODE(type),
+			WAN_TE1_LB_MODE_DECODE(type),
 			(mode == WAN_TE1_ACTIVATE_LB) ? "activated" : "deactivated");
 	}
 	return;
@@ -881,8 +888,8 @@
 				WAN_TE_RED_ALARM(fe_stats->alarms), 
 				WAN_TE_AIS_ALARM(fe_stats->alarms));
 		if (adapter_type == WAN_MEDIA_T1){ 
-			printf("YEL:\t%s\t| OOF:\t%s\n", 
-					WAN_TE_YEL_ALARM(fe_stats->alarms), 
+			printf("RAI:\t%s\t| OOF:\t%s\n", 
+					WAN_TE_RAI_ALARM(fe_stats->alarms), 
 					WAN_TE_OOF_ALARM(fe_stats->alarms));
 		}else{
 			printf("OOF:\t%s\t| RAI:\t%s\n", 
@@ -890,15 +897,15 @@
 					WAN_TE_RAI_ALARM(fe_stats->alarms));
 		}
 
-		if (fe_stats->liu_alarms & WAN_TE_BIT_LIU_ALARM){
+		if (fe_stats->alarms & WAN_TE_BIT_LIU_ALARM){
 			printf("\n***** %s: %s Alarms (LIU) *****\n\n",
 				if_name, (adapter_type == WAN_MEDIA_T1) ? "T1" : "E1");
 			printf("Short Circuit:\t%s\n", 
-					WAN_TE_LIU_ALARM_SC(fe_stats->liu_alarms));
+					WAN_TE_LIU_ALARM_SC(fe_stats->alarms));
 			printf("Open Circuit:\t%s\n", 
-					WAN_TE_LIU_ALARM_OC(fe_stats->liu_alarms));
+					WAN_TE_LIU_ALARM_OC(fe_stats->alarms));
 			printf("Loss of Signal:\t%s\n", 
-					WAN_TE_LIU_ALARM_LOS(fe_stats->liu_alarms));
+					WAN_TE_LIU_ALARM_LOS(fe_stats->alarms));
 		}
 
 	}else if  (adapter_type == WAN_MEDIA_DS3 || adapter_type == WAN_MEDIA_E3){
@@ -1288,3 +1295,57 @@
 	return;
 }
 
+void aft_remora_debug_mode(sdla_fe_debug_t *fe_debug)
+{
+	int	err = 0;
+	unsigned char	*data = NULL;
+
+	if(make_hardware_level_connection()){
+		return;
+	}
+	wan_udp.wan_udphdr_command	= WAN_FE_SET_DEBUG_MODE;
+	wan_udp.wan_udphdr_data_len	= sizeof(sdla_fe_debug_t);
+	wan_udp.wan_udphdr_return_code	= 0xaa;
+
+	data = get_wan_udphdr_data_ptr(0);
+	memcpy(data, (unsigned char*)fe_debug, sizeof(sdla_fe_debug_t));
+	err = DO_COMMAND(wan_udp);
+	if (fe_debug->type == WAN_FE_DEBUG_REG && fe_debug->fe_debug_reg.read == 1){
+		if (err == 0 && wan_udp.wan_udphdr_return_code == 0){
+			int	cnt = 0;
+			printf("Please wait.");fflush(stdout);
+repeat_read_reg:
+			wan_udp.wan_udphdr_return_code	= 0xaa;
+			fe_debug->fe_debug_reg.read = 2;
+			memcpy(data, (unsigned char*)fe_debug, sizeof(sdla_fe_debug_t));
+			usleep(100000);
+			err = DO_COMMAND(wan_udp);
+			if (err || wan_udp.wan_udphdr_return_code != 0){
+				if (cnt < 5){
+					printf(".");fflush(stdout);
+					goto repeat_read_reg;
+				}
+			}
+			printf("\n\n");
+		}
+	}
+
+	if (err || wan_udp.wan_udphdr_return_code != 0){
+		printf("Failed to execute RM debug mode (%02X).\n",
+						fe_debug->type);		
+	}else{
+		fe_debug = (sdla_fe_debug_t*)get_wan_udphdr_data_ptr(0);
+		switch(fe_debug->type){
+		case WAN_FE_DEBUG_REG:
+			if (fe_debug->fe_debug_reg.read == 2){
+				printf("Read Front-End Reg:%04X=%02X\n",
+						fe_debug->fe_debug_reg.reg,
+						fe_debug->fe_debug_reg.value);
+			}
+			break;
+		}
+	}
+	cleanup_hardware_level_connection();
+	return;
+}
+
diff -dur /root/3.2/wanpipe/util/wanpipemon/fe_lib.h /root/3.3/wanpipe/util/wanpipemon/fe_lib.h
--- /root/3.2/wanpipe/util/wanpipemon/fe_lib.h	2008-01-11 14:07:46.000000000 -0500
+++ /root/3.3/wanpipe/util/wanpipemon/fe_lib.h	2008-01-24 12:23:00.000000000 -0500
@@ -74,6 +74,8 @@
 extern void set_fe_debug_mode(sdla_fe_debug_t *);
 extern void set_fe_tx_mode(unsigned char mode);
 
+extern void aft_remora_debug_mode(sdla_fe_debug_t *);
+
 #define WAN_TRUE  1 
 #define WAN_FALSE 0
 #endif	/* _SDLA_FT1_H */
Binary files /root/3.2/wanpipe/util/wanpipemon/fe_lib.o and /root/3.3/wanpipe/util/wanpipemon/fe_lib.o differ
diff -dur /root/3.2/wanpipe/util/wanpipemon/fpipemon.c /root/3.3/wanpipe/util/wanpipemon/fpipemon.c
--- /root/3.2/wanpipe/util/wanpipemon/fpipemon.c	2008-01-11 14:07:46.000000000 -0500
+++ /root/3.3/wanpipe/util/wanpipemon/fpipemon.c	2008-01-25 11:02:27.000000000 -0500
@@ -282,7 +282,7 @@
 	if (x >= 4) return(WAN_FALSE);
    	station_config = wan_udp.wan_udphdr_data[0];
 	
-   	strcpy(codeversion, "?.??");
+   	strlcpy(codeversion, "?.??",10);
    
    	wan_udp.wan_udphdr_command = FR_READ_CODE_VERSION;
       	wan_udp.wan_udphdr_return_code = 0xaa;
@@ -291,7 +291,7 @@
 
    	if (wan_udp.wan_udphdr_return_code == 0) {
       		wan_udp.wan_udphdr_data[wan_udp.wan_udphdr_data_len] = 0;
-      		strcpy(codeversion, (char*)wan_udp.wan_udphdr_data);
+      		strlcpy(codeversion, (char*)wan_udp.wan_udphdr_data,10);
    	}
 
    	return(WAN_TRUE);
@@ -615,12 +615,12 @@
 			for (i=1;i<wan_udp.wan_udphdr_data_len;){
 				output_xml_val_data("DLCI",*((unsigned short*)&wan_udp.wan_udphdr_data[i]));
 				if (wan_udp.wan_udphdr_data[i+2] & 0x40){
-					cnt_val=sprintf(str_val,"Included, ");
+					cnt_val=snprintf(str_val,50,"Included, ");
 				}else{
-					cnt_val=sprintf(str_val,"Excluded, ");
+					cnt_val=snprintf(str_val,50,"Excluded, ");
 				}		
 			
-				cnt_val= sprintf((str_val+cnt_val),"%s",
+				cnt_val= snprintf((str_val+cnt_val),50-cnt_val,"%s",
 					(wan_udp.wan_udphdr_data[i+2] & 0x01) ? "Deleted" :
 					(wan_udp.wan_udphdr_data[i+2] & 0x02) ? "Active" :
 					(wan_udp.wan_udphdr_data[i+2] & 0x04) ? "Waiting" :
@@ -760,7 +760,7 @@
 
 	if (xml_output){
 		char tmp[100];
-		sprintf(tmp,"Statistics for dlci %i",dlci_number);
+		snprintf(tmp,100,"Statistics for dlci %i",dlci_number);
 		output_start_xml_router();
 		output_start_xml_header(tmp);
 	
Binary files /root/3.2/wanpipe/util/wanpipemon/fpipemon.o and /root/3.3/wanpipe/util/wanpipemon/fpipemon.o differ
diff -dur /root/3.2/wanpipe/util/wanpipemon/Makefile /root/3.3/wanpipe/util/wanpipemon/Makefile
--- /root/3.2/wanpipe/util/wanpipemon/Makefile	2008-01-11 14:07:46.000000000 -0500
+++ /root/3.3/wanpipe/util/wanpipemon/Makefile	2008-03-07 13:35:52.000000000 -0500
@@ -12,7 +12,7 @@
 
 PROD=wanpipemon
 
-SYSINC=$(shell echo "/lib/modules/$(shell uname -r)/build/include")
+SYSINC=/lib/modules/$(shell uname -r)/build/include
 
 WAN_VIRTUAL=
 LXDIR=../lxdialog
@@ -60,8 +60,8 @@
 endif
 
 ifeq "${ENABLE_HDLC}" "YES"
-CFLAGS += -DWANPIPEMON_HDLC_TRACE -I../lib/hdlc 
-OBJS += ../lib/hdlc/wanpipe_hdlc.o
+CFLAGS += -DWANPIPEMON_HDLC_TRACE -I../wan_hdlc_eng/ 
+OBJS += ../wan_hdlc_eng/wanpipe_hdlc.o
 endif 
 
 SRCS = $(OBJS:.o=.c)
Only in /root/3.3/wanpipe/util/wanpipemon: Makefile6.FreeBSD
Only in /root/3.3/wanpipe/util/wanpipemon: Makefile.FreeBSD
Only in /root/3.3/wanpipe/util/wanpipemon: Makefile.Linux
Only in /root/3.3/wanpipe/util/wanpipemon: Makefile.NetBSD
Only in /root/3.3/wanpipe/util/wanpipemon: Makefile.OpenBSD
diff -dur /root/3.2/wanpipe/util/wanpipemon/mppipemon.c /root/3.3/wanpipe/util/wanpipemon/mppipemon.c
--- /root/3.2/wanpipe/util/wanpipemon/mppipemon.c	2008-01-11 14:07:46.000000000 -0500
+++ /root/3.3/wanpipe/util/wanpipemon/mppipemon.c	2008-01-25 11:02:28.000000000 -0500
@@ -764,14 +764,14 @@
 } /* slarp_stats */
 
 
-
+#define MAX_OUTSTR_LEN	2000
 void line_trace(int trace_mode) 
 {
 	unsigned char num_frames, num_chars;
 	unsigned short curr_pos = 0;
 	trace_pkt_t *trace_pkt;
 	unsigned int i, j;
-	unsigned char outstr[2000];
+	unsigned char outstr[MAX_OUTSTR_LEN];
 	int recv_buff = sizeof(udp_mgmt_pkt_t ) + MDATALEN + 100;
 	fd_set ready;
 	struct timeval to;
diff -dur /root/3.2/wanpipe/util/wanpipemon/ppipemon.c /root/3.3/wanpipe/util/wanpipemon/ppipemon.c
--- /root/3.2/wanpipe/util/wanpipemon/ppipemon.c	2008-01-11 14:07:46.000000000 -0500
+++ /root/3.3/wanpipe/util/wanpipemon/ppipemon.c	2008-01-25 11:02:28.000000000 -0500
@@ -44,7 +44,6 @@
 #if defined(__LINUX__)
 # include <linux/wanpipe_defines.h>
 # include <linux/wanpipe_cfg.h>
-# include <linux/wanpipe_abstr.h>
 # include <linux/wanpipe.h>
 # include <linux/sdla_ppp.h>
 #else
@@ -54,7 +53,6 @@
 # include <netinet/udp.h>      
 # include <wanpipe_defines.h>
 # include <wanpipe_cfg.h>
-# include <wanpipe_abstr.h>
 # include <wanpipe.h>
 # include <sdla_ppp.h>
 #endif
@@ -162,7 +160,7 @@
 		is_508 = WAN_FALSE;
 	} 
    
-	strcpy(codeversion, "?.??");
+	strlcpy(codeversion, "?.??",10);
    
 	wan_udp.wan_udphdr_command = PPP_READ_CODE_VERSION;
 	wan_udp.wan_udphdr_return_code = 0xaa;
@@ -171,7 +169,7 @@
 
 	if (wan_udp.wan_udphdr_return_code == 0) {
 		wan_udp.wan_udphdr_data[wan_udp.wan_udphdr_data_len] = 0;
-		strcpy(codeversion, (char*)wan_udp.wan_udphdr_data);
+		strlcpy(codeversion, (char*)wan_udp.wan_udphdr_data,10);
 	}
 
 	return(WAN_TRUE);
diff -dur /root/3.2/wanpipe/util/wanpipemon/prot_trace.c /root/3.3/wanpipe/util/wanpipemon/prot_trace.c
--- /root/3.2/wanpipe/util/wanpipemon/prot_trace.c	2008-02-27 11:19:42.000000000 -0500
+++ /root/3.3/wanpipe/util/wanpipemon/prot_trace.c	2008-01-25 11:02:28.000000000 -0500
@@ -19,7 +19,6 @@
 # include <linux/if_ether.h>
 # include <linux/wanpipe_defines.h>
 # include <linux/wanpipe_cfg.h>
-# include <linux/wanpipe_abstr.h>
 # include <linux/wanpipe.h>
 #else
 # include <netinet/in_systm.h>
@@ -27,7 +26,6 @@
 # include <netinet/tcp.h>
 # include <wanpipe_defines.h>
 # include <wanpipe_cfg.h>
-# include <wanpipe_abstr.h>
 # include <wanpipe.h>
 # include <sdla_chdlc.h>
 #endif
@@ -76,6 +74,7 @@
 unsigned char dighex(unsigned char n);
 int x25_call_request_decode (unsigned char *data, int len);
 void trace_banner (wp_trace_output_iface_t *trace_iface, int *trace_started);
+int trace_hdlc_data(wanpipe_hdlc_engine_t *hdlc_eng, void *data, int len);
 
 static void decode_chdlc_ip_transaction(cisco_slarp_t *cisco_slarp);
 static void print_ipv4_address(unsigned int address);
@@ -114,7 +113,7 @@
 		
 		date_string[0] = '\0';
 
-		sprintf(date_string, "%5d", timestamp);
+		snprintf(date_string, 100, "%5d", timestamp);
 		
 		if (trace_iface->sec){
 			char tmp_time[50];
@@ -125,21 +124,21 @@
 			time_tm = localtime(&time_val);
    
 			strftime(tmp_time,sizeof(tmp_time),"  %b",time_tm);
-			sprintf(date_string+strlen(date_string), " %s ",tmp_time);
+			snprintf(date_string+strlen(date_string), 100-strlen(date_string), " %s ",tmp_time);
 
 			strftime(tmp_time,sizeof(tmp_time),"%d",time_tm);
-			sprintf(date_string+strlen(date_string), "%s ",tmp_time);
+			snprintf(date_string+strlen(date_string), 100-strlen(date_string), "%s ",tmp_time);
 
 			strftime(tmp_time,sizeof(tmp_time),"%H",time_tm);
-			sprintf(date_string+strlen(date_string), "%s:",tmp_time);
+			snprintf(date_string+strlen(date_string), 100-strlen(date_string), "%s:",tmp_time);
 
 			strftime(tmp_time,sizeof(tmp_time),"%M",time_tm);
-			sprintf(date_string+strlen(date_string), "%s:",tmp_time);
+			snprintf(date_string+strlen(date_string), 100-strlen(date_string), "%s:",tmp_time);
 
 			strftime(tmp_time,sizeof(tmp_time),"%S",time_tm);
-			sprintf(date_string+strlen(date_string), "%s",tmp_time);
+			snprintf(date_string+strlen(date_string), 100-strlen(date_string), "%s",tmp_time);
 
-			sprintf(date_string+strlen(date_string), " %-6lu [1/100s]",trace_iface->usec );
+			snprintf(date_string+strlen(date_string), 100-strlen(date_string), " %-6lu [1/100s]",(unsigned long)trace_iface->usec );
 		}
 		
 		printf("\n%s\tLen=%d\tTimeStamp=%s\n",
@@ -331,7 +330,7 @@
     if (code == 0x39)
 	return "Destination Absent";
 
-    sprintf(buffer, "Unknown %02X", code);
+    snprintf(buffer, 25, "Unknown %02X", code);
 
     return buffer;
 }
@@ -558,7 +557,7 @@
     if (code == 250)
 	return "Reset - user resynchronization";
 
-    sprintf(buffer, "Unknown %d", code);
+    snprintf(buffer, 25, "Unknown %d", code);
 
     return buffer;
 }
@@ -567,7 +566,7 @@
 static int decode_chdlc(wp_trace_output_iface_t *trace_iface,
 		        int *trace_started)
 {
-	unsigned char *data	= trace_iface->data;
+	unsigned char *data= trace_iface->data;
 
 	int inf_frame=0;
 	cisco_header_t *cisco_header = (cisco_header_t *)&data[0];
@@ -938,7 +937,7 @@
 static int decode_fr(wp_trace_output_iface_t *trace_iface,
 		 int *trace_started,int dlci)
 {
-	unsigned char *data	=trace_iface->data;
+	unsigned char *data	=(unsigned char*)trace_iface->data;
 	int len 		=trace_iface->len;
 	
 	int inf_frame=1;
@@ -1524,15 +1523,16 @@
 	struct pcaprec_hdr ph;
 	
  	/* Write PCap header */
-        ph.ts_sec = trace_iface->sec;
-        ph.ts_usec = trace_iface->usec;
+        ph.ts_sec = trace_iface->pkts_written;
+        ph.ts_usec = trace_iface->pkts_written;
         ph.incl_len =  trace_iface->len;
         ph.orig_len = trace_iface->len;
 
 	fwrite(&ph, sizeof(ph), 1, trace_iface->output_file);
 }
 
-static void get_ppp_magic_number(unsigned char* data, int len, char* outstr, char offset_flag)
+static void
+get_ppp_magic_number(unsigned char* data, int len, char* outstr, int max_len, char offset_flag)
 {
 	if(offset_flag == 0){
 
@@ -1540,7 +1540,7 @@
 			printf("%s invalid buffer length. Line: %d\n", __FUNCTION__, __LINE__);
 			return;
 		}
-		sprintf(outstr, "\tMagic# %02X%02X%02X%02X",
+		snprintf(outstr, max_len, "\tMagic# %02X%02X%02X%02X",
 			(unsigned char)data[8], (unsigned char)data[9],
 		       	(unsigned char)data[10], (unsigned char)data[11]);
 	}else{
@@ -1549,12 +1549,13 @@
 			printf("%s invalid buffer length. Line: %d\n", __FUNCTION__, __LINE__);
 			return;
 		}
-		sprintf(outstr, "\tMagic# %02X%02X%02X%02X", 
+		snprintf(outstr, max_len, "\tMagic# %02X%02X%02X%02X", 
 			(unsigned char)data[8+2], (unsigned char)data[8+3],
 		       	(unsigned char)data[8+4], (unsigned char)data[8+5]);
 	}
 }
 
+#define MAX_OUTSTR_LEN	1024
 static int decode_ppp(wp_trace_output_iface_t *trace_iface,
 		        int *trace_started)
 {
@@ -1562,10 +1563,10 @@
 	int len = trace_iface->len;
 	int inf_frame=0;
 	unsigned short tmp_ushort;
-	char outstr[1024];
+	char outstr[MAX_OUTSTR_LEN];
 	
 	trace_banner(trace_iface,trace_started);
-	memset(outstr, 0x00, 1024);
+	memset(outstr, 0x00, MAX_OUTSTR_LEN);
 	
 	//print the data (including PPP header)
 	print_data_in_hex(data, len);
@@ -1591,58 +1592,58 @@
 
 		//pre-decodeing
 		if (tmp_ushort == 0x2180){
-			sprintf(outstr+strlen(outstr), "IPCP-v4 packet - ");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "IPCP-v4 packet - ");
 		}
 
 		if (tmp_ushort == 0x5780){
-			sprintf(outstr+strlen(outstr), "IPCP-v6 packet - ");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "IPCP-v6 packet - ");
 		}
 
 		if (tmp_ushort == 0x2B80){
-			sprintf(outstr+strlen(outstr), "IPXCP packet - ");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "IPXCP packet - ");
 		}
 
 		if (tmp_ushort == 0x21C0){
-			sprintf(outstr+strlen(outstr), "LCP packet\tID 0x%02X - ", data[5]);
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "LCP packet\tID 0x%02X - ", data[5]);
 		}
 
 		//common decoding
 		switch(data[4]) {
 		case 1: 
-			sprintf(outstr+strlen(outstr), "Configure Request");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Configure Request");
 			break;
 		case 2: 
-			sprintf(outstr+strlen(outstr), "Configure Ack\t");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Configure Ack\t");
 			break;
 		case 3: 
-			sprintf(outstr+strlen(outstr), "Configure Nack\t");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Configure Nack\t");
 			break;
 		case 4: 
-			sprintf(outstr+strlen(outstr), "Configure Reject");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Configure Reject");
 			break;
 		case 5: 
-			sprintf(outstr+strlen(outstr), "Terminate Request");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Terminate Request");
 			break;
 		case 6: 
-			sprintf(outstr+strlen(outstr), "Terminate Ack\t");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Terminate Ack\t");
 			break;
 		case 7: 
-			sprintf(outstr+strlen(outstr), "Code Reject\t");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Code Reject\t");
 			break;
 		case 8: 
-			sprintf(outstr+strlen(outstr), "Protocol Reject");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Protocol Reject");
 			break;
 		case 9: 
-			sprintf(outstr+strlen(outstr), "Echo Request\t");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Echo Request\t");
 			break;
 		case 10: 
-			sprintf(outstr+strlen(outstr), "Echo Reply\t");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Echo Reply\t");
 			break;
 		case 11: 
-			sprintf(outstr+strlen(outstr), "Discard Request");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Discard Request");
 			break;
 		default:
-			sprintf(outstr+strlen(outstr), "Unknown type");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Unknown type");
 			break;
 		}
 
@@ -1651,16 +1652,24 @@
 			//LCP
 			switch(data[4]) {
 			case 1: 
-				get_ppp_magic_number(data, len, outstr+strlen(outstr), 1);
+				get_ppp_magic_number(
+					data, len, 
+					outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), 1);
 				break;
 			case 2: 
-				get_ppp_magic_number(data, len, outstr+strlen(outstr), 1);
+				get_ppp_magic_number(
+					data, len, 
+					outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), 1);
 				break;
 			case 3: 
-				get_ppp_magic_number(data, len, outstr+strlen(outstr), 1);
+				get_ppp_magic_number(
+					data, len, 
+					outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), 1);
 				break;
 			case 4: 
-				get_ppp_magic_number(data, len, outstr+strlen(outstr), 1);
+				get_ppp_magic_number(
+					data, len, 
+					outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), 1);
 				break;
 			case 5: 
 			case 6: 
@@ -1669,13 +1678,19 @@
 				;//do nothing
 				break;
 			case 9: 
-				get_ppp_magic_number(data, len, outstr+strlen(outstr), 0);
+				get_ppp_magic_number(
+					data, len, 
+					outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), 0);
 				break;
 			case 10: 
-				get_ppp_magic_number(data, len, outstr+strlen(outstr), 0);
+				get_ppp_magic_number(
+					data, len, 
+					outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), 0);
 				break;
 			case 11: 
-				get_ppp_magic_number(data, len, outstr+strlen(outstr), 0);
+				get_ppp_magic_number(
+					data, len, 
+					outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), 0);
 				break;
 			default:
 				break;
@@ -1684,47 +1699,47 @@
 		break;
 
 	case 0x23C0: // PAP
-		sprintf(outstr+strlen(outstr), "PAP packet - ");
+		snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "PAP packet - ");
 		switch(data[4]) {
 		case 1: 
-			sprintf(outstr+strlen(outstr), "Authenticate Request");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Authenticate Request");
 			break;
 		case 2: 
-			sprintf(outstr+strlen(outstr), "Authenticate Ack");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Authenticate Ack");
 			break;
 		case 3: 
-			sprintf(outstr+strlen(outstr), "Authenticate Nack");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Authenticate Nack");
 			break;
 		default:
-			sprintf(outstr+strlen(outstr), "Unknown type");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Unknown type");
 			break;
 		}
 		break;
 	case 0x25C0: // LQR
-		sprintf(outstr+strlen(outstr), "Link Quality Report");
+		snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Link Quality Report");
 		break;
 	case 0x23C2: // CHAP
-		sprintf(outstr+strlen(outstr), "CHAP packet - ");
+		snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "CHAP packet - ");
 		switch(data[4]) {
 		case 1: 
-			sprintf(outstr+strlen(outstr), "Challenge");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Challenge");
 			break;
 		case 2: 
-			sprintf(outstr+strlen(outstr), "Responce");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Responce");
 			break;
 		case 3: 
-			sprintf(outstr+strlen(outstr), "Success");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Success");
 			break;
 		case 4: 
-			sprintf(outstr+strlen(outstr), "Failure");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Failure");
 			break;
 		default:
-			sprintf(outstr+strlen(outstr), "Unknown type");
+			snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Unknown type");
 			break;
 		}
 		break;
 	default:	// unknown
-		sprintf(outstr+strlen(outstr), "Unknown type");
+		snprintf(outstr+strlen(outstr), MAX_OUTSTR_LEN-strlen(outstr), "Unknown type");
 		break;
 	}
 
Binary files /root/3.2/wanpipe/util/wanpipemon/prot_trace.o and /root/3.3/wanpipe/util/wanpipemon/prot_trace.o differ
diff -dur /root/3.2/wanpipe/util/wanpipemon/wangui.c /root/3.3/wanpipe/util/wanpipemon/wangui.c
--- /root/3.2/wanpipe/util/wanpipemon/wangui.c	2008-01-11 14:07:46.000000000 -0500
+++ /root/3.3/wanpipe/util/wanpipemon/wangui.c	2008-01-25 11:02:33.000000000 -0500
@@ -161,9 +161,9 @@
 		return -1;
 	}
 
-	sprintf(current, "lo");
-	sprintf(title,"Operation Mode Seleciton");
-	sprintf(prompt,"Local System: device resides on the server, if name needed.  Remote System: device resides on the network, thus ip address needed");
+	snprintf(current,100,"lo");
+	snprintf(title,100,"Operation Mode Seleciton");
+	snprintf(prompt,100,"Local System: device resides on the server, if name needed.  Remote System: device resides on the network, thus ip address needed");
 
 	memset(data,0,100);
 
@@ -216,8 +216,8 @@
 		return -1;
 	}
 
-	sprintf(title,"IP Address Setup");
-	sprintf(prompt,"Specify a remote IP address");
+	snprintf(title,100,"IP Address Setup");
+	snprintf(prompt,100,"Specify a remote IP address");
 
 	if (!(pid=fork())){
 		
@@ -241,7 +241,7 @@
 	
 	if (stat==SELECT_OK){
 		struct in_addr *ip_str = NULL;
-		strcpy(ipaddress,data);
+		strlcpy(ipaddress,data,16);
 		if (inet_aton(ipaddress,ip_str) != 0 ){
 			ip_addr = WAN_TRUE;
 		}else{
@@ -251,8 +251,8 @@
 		return -1;
 	}
 
-	sprintf(title,"UPD Port Setup");
-	sprintf(prompt,"Specify remote UPD port");
+	snprintf(title,100,"UPD Port Setup");
+	snprintf(prompt,100,"Specify remote UPD port");
 
 	if (!(pid=fork())){
 		
@@ -374,9 +374,9 @@
 		return -1;
 	}
 
-	sprintf(current, "lo");
-	sprintf(title,"Interface Selection");
-	sprintf(prompt,"Please select a WANPIPE interface using UP and DOWN keys");
+	snprintf(current, 100,"lo");
+	snprintf(title,100,"Interface Selection");
+	snprintf(prompt,100,"Please select a WANPIPE interface using UP and DOWN keys");
 
 	
 	memset(data,0,100);
@@ -418,7 +418,7 @@
 	close(pipefds[1]);
 
 	if (stat == SELECT_OK){
-		strcpy(if_name,data);
+		strlcpy(if_name,data,WAN_IFNAME_SZ);
 		ip_addr=WAN_FALSE;
 		return 0;
 	}
@@ -443,9 +443,9 @@
 		return;
 	}
 	
-	sprintf(current, "A");
-	sprintf(title,"Command Main Menu");
-	sprintf(prompt,"Select one of the command sections");
+	snprintf(current,100,"A");
+	snprintf(title,100,"Command Main Menu");
+	snprintf(prompt,100,"Select one of the command sections");
 
 	for (;;){
 		memset(data,0,100);
Binary files /root/3.2/wanpipe/util/wanpipemon/wangui.o and /root/3.3/wanpipe/util/wanpipemon/wangui.o differ
Binary files /root/3.2/wanpipe/util/wanpipemon/wanpipemon and /root/3.3/wanpipe/util/wanpipemon/wanpipemon differ
Only in /root/3.3/wanpipe/util/wanpipemon: wanpipemon_api.tgz
diff -dur /root/3.2/wanpipe/util/wanpipemon/wanpipemon.c /root/3.3/wanpipe/util/wanpipemon/wanpipemon.c
--- /root/3.2/wanpipe/util/wanpipemon/wanpipemon.c	2008-01-11 14:07:46.000000000 -0500
+++ /root/3.3/wanpipe/util/wanpipemon/wanpipemon.c	2008-03-13 15:59:01.000000000 -0400
@@ -184,10 +184,6 @@
 		                         AFTget_main_menu, AFTget_cmd_menu, 
 					 NULL,NULL, 2 },
 
-	{ WANCONFIG_AFT_TE3,	"aft",   AFTConfig, AFTUsage, AFTMain, AFTDisableTrace, 
-		                         AFTget_main_menu, AFTget_cmd_menu, 
-					 NULL,NULL, 2 },
-
 	{ 0, "N/A", 0, 0, 0, 0,0 }, 
 };
 #else
@@ -222,6 +218,18 @@
 		                         AFTget_main_menu, AFTget_cmd_menu, 
 					 NULL,NULL, 2 },
 
+	{ WANCONFIG_AFT_56K,	"aft",   AFTConfig, AFTUsage, AFTMain, AFTDisableTrace, 
+		                         AFTget_main_menu, AFTget_cmd_menu, 
+					 NULL,NULL, 2 },
+
+	{ WANCONFIG_AFT_ISDN_BRI,	"aft",   AFTConfig, AFTUsage, AFTMain, AFTDisableTrace, 
+		                         AFTget_main_menu, AFTget_cmd_menu, 
+					 NULL,NULL, 2 },
+
+	{ WANCONFIG_AFT_SERIAL,	"aft",   AFTConfig, AFTUsage, AFTMain, AFTDisableTrace, 
+		                         AFTget_main_menu, AFTget_cmd_menu, 
+					 NULL,NULL, 2 },
+
 	{ WANCONFIG_AFT_ANALOG,	"aft",   AFTConfig, AFTUsage, AFTMain, AFTDisableTrace, 
 		                         AFTget_main_menu, AFTget_cmd_menu, 
 					 NULL,NULL, 2 },
@@ -844,6 +852,7 @@
 		}else if (!strcmp(argv[i], "-d")){
 			TRACE_DLCI=dlci_number=16;
 			d_cnt=1;
+
 		}else if (!strcmp(argv[i],"-pv6")){
 			af = AF_INET6;	// IPV6
 
@@ -862,19 +871,29 @@
 			}
 
 			if (strcmp(argv[i+1], "chdlc") == 0){
-				strcpy((char*)wan_udp.wan_udphdr_signature, UDP_CHDLC_SIGNATURE);
+				strlcpy((char*)wan_udp.wan_udphdr_signature,
+					UDP_CHDLC_SIGNATURE,
+					strlen(wan_udp.wan_udphdr_signature));
 				wan_protocol=WANCONFIG_CHDLC;
 			}else if (strcmp(argv[i+1], "fr") == 0){
-				strcpy((char*)wan_udp.wan_udphdr_signature, UDP_FR_SIGNATURE);
+				strlcpy((char*)wan_udp.wan_udphdr_signature, 
+					UDP_FR_SIGNATURE,
+					strlen(wan_udp.wan_udphdr_signature));
 				wan_protocol=WANCONFIG_FR;
 			}else if (strcmp(argv[i+1], "ppp") == 0){
-				strcpy((char*)wan_udp.wan_udphdr_signature, UDP_PPP_SIGNATURE);
+				strlcpy((char*)wan_udp.wan_udphdr_signature, 
+					UDP_PPP_SIGNATURE,
+					strlen(wan_udp.wan_udphdr_signature));
 				wan_protocol=WANCONFIG_PPP;
 			}else if (strcmp(argv[i+1], "x25") == 0){
-				strcpy((char*)wan_udp.wan_udphdr_signature, UDP_X25_SIGNATURE);
+				strlcpy((char*)wan_udp.wan_udphdr_signature, 
+					UDP_X25_SIGNATURE,
+					strlen(wan_udp.wan_udphdr_signature));
 				wan_protocol=WANCONFIG_X25;
 			}else if (strcmp(argv[i+1], "adsl") == 0){
-				strcpy((char*)wan_udp.wan_udphdr_signature, GLOBAL_UDP_SIGNATURE);
+				strlcpy((char*)wan_udp.wan_udphdr_signature, 
+					GLOBAL_UDP_SIGNATURE,
+					strlen(wan_udp.wan_udphdr_signature));
 				wan_protocol=WANCONFIG_ADSL;
 			}else{
 				usage();
@@ -903,7 +922,7 @@
 				if (trace_prot_opt[x].prot_index == -1)
 					break;
 			
-				if (strstr(argv[i+1],trace_prot_opt[x].prot_name) != NULL){
+				if (strstr(argv[i+1],(char*)trace_prot_opt[x].prot_name) != NULL){
 					TRACE_PROTOCOL|=trace_prot_opt[x].prot_index;
 					pcap_prot=trace_prot_opt[x].pcap_prot;
 				}
@@ -965,7 +984,7 @@
 				if (trace_x25_prot_opt[x].prot_index == -1)
 					break;
 				
-				if (strstr(argv[i+1],trace_x25_prot_opt[x].prot_name) != NULL){
+				if (strstr(argv[i+1],(char*)trace_x25_prot_opt[x].prot_name) != NULL){
 					TRACE_X25_OPT|=trace_x25_prot_opt[x].prot_index;
 				}
 			}
@@ -1085,7 +1104,7 @@
 
 
 #if !defined(CONFIG_PRODUCT_WANPIPE_GENERIC)
-static unsigned char usage_long_buf[]= "\n"
+static char usage_long_buf[]= "\n"
 "\n"
 "Wanpipemon Verison 1.0\n"
 "Copyright (C) 2002 - Sangoma Technologies\n"
@@ -1314,8 +1333,12 @@
 	char command[MAX_CMD_LENGTH+1];
 	int err = 0;
 
-	strcpy((char*)wan_udp.wan_udphdr_signature, GLOBAL_UDP_SIGNATURE);
-	sprintf(pcap_output_file_name,"wp_trace_pcap.bin");
+	strlcpy((char*)wan_udp.wan_udphdr_signature, 
+		GLOBAL_UDP_SIGNATURE,
+		strlen(wan_udp.wan_udphdr_signature)); 
+	snprintf(pcap_output_file_name,
+		strlen(pcap_output_file_name),
+		"wp_trace_pcap.bin");
 
 	signal(SIGHUP,sig_end);
 	signal(SIGINT,sig_end);
diff -dur /root/3.2/wanpipe/util/wanpipemon/wanpipemon.h /root/3.3/wanpipe/util/wanpipemon/wanpipemon.h
--- /root/3.2/wanpipe/util/wanpipemon/wanpipemon.h	2008-01-11 14:07:46.000000000 -0500
+++ /root/3.3/wanpipe/util/wanpipemon/wanpipemon.h	2008-01-24 12:23:00.000000000 -0500
@@ -107,6 +107,7 @@
 extern char ** BITSTRMget_main_menu(int *len);
 extern char ** BITSTRMget_cmd_menu(char *cmd_name,int *len);
 
+
 #endif
 extern char ** ADSLget_main_menu(int *len);
 extern char ** ATMget_main_menu(int *len);
@@ -363,7 +364,7 @@
 #define ALL_X25 (DATA|PROT)
 
 typedef struct {
-	char prot_name[15];
+	unsigned char prot_name[15];
 	signed char prot_index;
 	unsigned int  pcap_prot;
 } trace_prot_t;
Binary files /root/3.2/wanpipe/util/wanpipemon/wanpipemon.o and /root/3.3/wanpipe/util/wanpipemon/wanpipemon.o differ
