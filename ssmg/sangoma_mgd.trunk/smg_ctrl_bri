#!/bin/bash
cmd=$1;
cnt=0;
max_retry=10;
use_syslog=1;
use_safe=0;
args=' ';

while [ ! -z "$2" ]; 
do
	args=$args"$2 "
	shift
done


function stop_all()
{

	echo " "
	echo "Stopping running processes..."
	
	stop_safe_sangoma
	stop_sangoma_brid
	stop_sangoma_mgd
	remove_pid_files
}

function stop_sangoma_brid()
{
	#stop sangoma_brid
	eval "pidof sangoma_brid >/dev/null 2>/dev/null"
	if [ $? -eq 0 ]; then
		echo -n "Sending TERM signal to sangoma_brid..."
		eval "kill -TERM $(pidof sangoma_brid) 2>/dev/null >/dev/null"
		if [ $? -eq 0 ]; then
			echo "OK"
		else
			echo "FAILED"
			break;
		fi
	fi
	for ((i=0;i<$max_retry;i++))
	do
		eval "pidof sangoma_brid >/dev/null 2>/dev/null"
		if [ $? -ne 0 ]; then
			echo "sangoma_brid is stopped"
			return;
		else
			echo "waiting for sangoma_brid to finish($i/$max_retry)...."
			sleep 1
		fi
	done
	eval "pidof sangoma_brid >/dev/null 2>/dev/null"
	if [ $? -eq 0 ]; then
		echo -n "Sending KILL signal to sangoma_brid..."
		eval "kill -KILL $(pidof sangoma_brid) 2>/dev/null >/dev/null"
		if [ $? -eq 0 ]; then
			echo "OK"
		else	
			echo "FAILED"
			break;
		fi
	fi
	for ((i=0;i<$max_retry;i++))
	do
		eval "pidof sangoma_brid >/dev/null 2>/dev/null"
		if [ $? -ne 0 ]; then
			echo "sangoma_brid is stopped"
			break;
		else
			echo "waiting for sangoma_brid to finish($i/$max_retry)...."
			sleep 1
		fi
	done
}

function stop_sangoma_mgd()
{
	#stop sangoma media gateway
	eval "pidof sangoma_mgd >/dev/null 2>/dev/null"
	if [ $? -eq 0 ]; then
		echo -n "Sending TERM signal to sangoma_mgd..."
		eval "sangoma_mgd -term 2>/dev/null >/dev/null"
		if [ $? -eq 0 ]; then
			echo "OK"
			return;
		else 
			echo "FAILED"
			echo "Failed to stop sangoma_mgd"
			exit 1
		fi
	else 
		echo "sangoma_mgd not running..."
		return;
	fi

	
	#stop sangoma media gateway
	eval "pidof sangoma_mgd >/dev/null 2>/dev/null"
	if [ $? -eq 0 ]; then
		echo -n "Sending TERM signal to sangoma_mgd..."
		eval "kill -KILL $(pidof sangoma_mgd) 2>/dev/null >/dev/null"
		if [ $? -eq 0 ]; then
			echo "OK"
		else 
			echo "FAILED"
			echo "Failed to stop sangoma_mgd"
			exit 1
		fi
	else 
		echo "sangoma_mgd not running..."
	fi
}

function stop_safe_sangoma()
{
	eval "pidof safe_sangoma >/dev/null 2>/dev/null"
	if [ $? -eq 0 ]; then
		echo -n "Sending TERM signal to safe_sangoma..."
		eval "kill -TERM $(pidof safe_sangoma) >/dev/null >/dev/null"
		if [ $? -eq 0 ]; then
			echo "OK"
			return;
		else 
			echo "FAILED"
			echo "Failed to stop safe_sangoma"
			exit 1
		fi
	else 
		echo "safe_sangoma not running..."
		return;
	fi

	
	eval "pidof safe_sangoma >/dev/null 2>/dev/null"
	if [ $? -eq 0 ]; then
		echo -n "Sending TERM signal to safe_sangoma..."
		eval "kill -KILL $(pidof safe_sangoma) 2>/dev/null >/dev/null"
		if [ $? -eq 0 ]; then
			echo "OK"
		else 
			echo "FAILED"
			echo "Failed to stop safe_sangoma"
			exit 1
		fi
	else 
		echo "safe_sangoma not running..."
	fi
}

function remove_pid_files()
{
	echo -n "Removing PID files..."
	if [ -e /var/run/sangoma_brid.pid ]; then
		eval "rm -f /var/run/sangoma_brid.pid > /dev/null"
		if [ $? -ne 0 ]; then
			echo " " 
			echo "Failed to remove /var/run/sangoma_brid.pid, try to remove it manually"
		fi
	fi
	if [ -e /var/run/sangoma_mgd.pid ]; then
		eval "rm -f /var/run/sangoma_mgd.pid > /dev/null"
		if [ $? -ne 0 ]; then
			echo " " 
			echo "Failed to remove /var/run/sangoma_mgd.pid, try to remove it manually"
		fi
	fi
	echo "done"
}

function start_test()
{
	echo " "
	echo "Testing configuration files..."
	if [ $use_syslog -eq 1 ]; then
		eval "sangoma_brid -t"
	else 
		eval "sangoma_brid -t -log"
	fi

	if [ $? -eq 0 ]; then
		echo "OK"
	else 
		echo "Failed"
	fi
	
}


function start_all()
{
	check_running
	pre_args="";
	post_args="";
	#post_args=$post_args" >/dev/null 2>/dev/null &"
	echo " " 
	echo "Starting processes..."
	echo -n "Loading SCTP..."
	eval "modprobe sctp  >>/var/log/sangoma_mgd.log 2>>/var/log/sangoma_mgd.log"
	if [ $?	-eq 0 ]; then
		echo "OK"
	else 
		echo "Failed"
		echo "Failed to load SCTP module, check /var/log/sangoma_mgd.log"
		exit 1;
	fi
	sleep 1

	eval "ls /dev/wanpipe* >/dev/null 2>/dev/null"
	
	if [ $? -ne 0 ]; then
		echo "No Sangoma TDM API interfaces running"
		echo "Did you start wanrouter? "
		exit 1;
	fi

	echo -n "Starting sangoma_brid..."
	if [ $use_syslog -eq 0 ]; then
		post_args=$post_args" -log"
	fi

	if [ $use_safe -eq 1 ]; then
		pre_args=$pre_args" safe_sangoma"
	else 
		post_args=$post_args" -bg"
	fi

 	eval "$pre_args sangoma_brid $post_args >/dev/null 2>/dev/null &"
	if [ $?	-eq 0 ]; then
		echo "OK"
	else 
		echo "Failed"
		echo "Failed to start sangoma_brid, check /var/log/sangoma_mgd.log for errors"
		exit 1;
	fi
	sleep 2 
	if [ ! $(pidof sangoma_brid) ]; then
		echo "sangoma_brid failed to start"
		echo "check /var/log/sangoma_mgd.log for errors"
		exit 1;
	fi
	sleep 3	
	echo -n "Starting sangoma_mgd..."
	eval "$pre_args sangoma_mgd $post_args >/dev/null 2>/dev/null &"
	if [ $? -eq 0 ]; then
		echo "OK"
	else 
		echo "Failed"
		echo "Failed to start sangoma_mgd, check /var/log/sangoma_mgd.log for errors"
		exit 1;
	fi

	sleep 2	
	if [ ! $(pidof sangoma_mgd) ]; then
		echo "sangoma_mgd failed to start"
		echo "check /var/log/sangoma_mgd.log for errors"
		exit 1;
	fi

	echo "Sangoma SMG running.."
	if [ $use_syslog -eq 1 ]; then
		echo "log file: /var/log/sangoma_mgd.log"
	else
		echo "log file: /var/log/sangoma_mgd/sangoma_mgd.log"
	fi
	echo " "
}

function usage()
{
	echo " "
	echo "Usage: smg_ctrl <command> <options> "
	echo "	command:"
	echo " "
	echo "start	:start sangoma_brid and sangoma media gateway"
	echo "stop 	:stop sangoma_brid and sangoma media gateway"
	echo "restart	:restart sangoma_brid and sangoma media gateway"
	echo "test	:test configuration only"
	echo " "
	echo "  options:"
	echo "nosyslog	:does not use syslog to log data"
	echo " "

}
function check_running ()
{
	if [ $(pidof sangoma_brid) ]; then
		echo "sangoma_brid is currently running"
		echo "exiting..."
		exit 0
	fi

	if [ $(pidof sangoma_mgd) ]; then
		echo "sangoma_mgd is currently running"
		echo "exiting..."
		exit 0
	fi
	if [ -e /var/run/sangoma_brid.pid ];then
		eval "rm -f /var/run/sangoma_brid.pid >/dev/null 2>/dev/null";
	fi
	if [ -e /var/run/sangoma_mgd.pid ];then
		eval "rm -f /var/run/sangoma_mgd.pid >/dev/null 2>/dev/null";
	fi
}

function check_pid_brid()
{
	if [ ! $(pidof sangoma_brid) ]; then
		echo "sangoma_brid is not running"
		exit 1
	fi
}

function toggle_capture()
{
	check_pid_brid
	eval "kill -SIGRTMIN+2 $(pidof sangoma_brid)"
	if [ $? -eq 0 ]; then
		echo "BRI: Protocol capture toggled"
	else 
		echo "BRI: Failed to send command"
	fi
}

function increase_verbose()
{
	check_pid_brid
	SIG_VAL=`kill -l SIGRTMIN`
	echo "signal: $SIG_VAL"
	eval "kill -SIGRTMIN $(pidof sangoma_brid)"
	if [ $? -eq 0 ]; then
		echo "BRI: Verbosity increased"
	else 
		echo "BRI: Failed to send command"
	fi

}

function decrease_verbose()
{
	check_pid_brid
	eval "kill -SIGRTMIN+1 $(pidof sangoma_brid)"
	if [ $? -eq 0 ]; then
		echo "BRI: Verbosity decreased"
	else 
		echo "BRI: Failed to send command"
	fi
}

function show_calls()
{
	check_pid_brid
	eval "kill -SIGRTMIN+3 $(pidof sangoma_brid) "
	if [ $? -eq 0 ]; then
		echo "BRI: Show calls"
	else 
		echo "BRI: Failed to send command"
	fi
}

function show_spans()
{
	check_pid_brid
	eval "kill -SIGRTMIN+4 $(pidof sangoma_brid)"
	if [ $? -eq 0 ]; then
		echo "BRI: Show spans"
	else 
		echo "BRI: Failed to send command"
	fi
}

function parse_args()
{
	for arg in $args
	do
		case $arg in 
			nosyslog)
				use_syslog=0;
				;;
			safe)
				use_safe=1;
				;;
		esac

	done	
}

parse_args


if [ "$cmd" = "start" ]; then
	start_all
elif [ "$cmd" = "safe_start" ]; then
	use_safe=1
	start_all
elif [ "$cmd" = "stop" ]; then
	stop_all
elif [ "$cmd" = "restart" ]; then
	stop_all
	start_all
elif [ "$cmd" = "capture" ]; then
	toggle_capture	
elif [ "$cmd" = "v+" ]; then
	increase_verbose
elif [ "$cmd" = "v-" ]; then
	decrease_verbose
elif [ "$cmd" = "show_spans" ]; then
	show_spans
elif [ "$cmd" = "show_calls" ]; then
	show_calls
elif [ "$cmd" = "test" ]; then
	start_test
else 
	usage
fi
