Index: sangoma_mgd.c
===================================================================
--- sangoma_mgd.c	(revision 206)
+++ sangoma_mgd.c	(working copy)
@@ -8,6 +8,11 @@
  * the GNU General Public License
  * 
  * =============================================
+ * v1.12 Nenad Corbic <ncorbic@sangoma.com>
+ *	Fixed CCR 
+ *	Removed socket shutdown on end call.
+ *	Let Media thread shutodwn sockets.
+ *
  * v1.11 Nenad Corbic <ncorbic@sangoma.com>
  * 	Fixed Remote asterisk/woomera connection
  *	Increased socket timeouts
@@ -100,13 +105,19 @@
 #define SMG_DTMF_OFF 	50
 #define SMG_DTMF_RATE  	8000
 
-#define SMG_VERSION	"v1.11"
+#define SMG_VERSION	"v1.12"
 
 /* enable early media */
 #if 1
 #define WOOMERA_EARLY_MEDIA 1
 #endif
 
+#if 0
+#warning "NENAD: MEDIA SHUTDOWN"
+#define MEDIA_SOCK_SHUTDOWN 1	
+#endif
+
+
 #ifdef DOTRACE
 static int tc = 0;
 #endif
@@ -133,7 +144,7 @@
 
 const char WELCOME_TEXT[] =
 "================================================================================\n"
-"Sangoma Media Gateway Daemon v1.11 \n"
+"Sangoma Media Gateway Daemon v1.12 \n"
 "TDM Signal Media Gateway for Sangoma/Wanpipe Cards\n"
 "Copyright 2005, 2006, 2007 \n"
 "Anthony Minessale II <anthmct@yahoo.com>, Nenad Corbic <ncorbic@sangoma.com>\n"
@@ -1116,10 +1127,16 @@
 		res = 1;
 	} else if ((pfds[0].revents & POLLERR)) {
 		res = -1;
+	} else if ((pfds[0].revents & POLLNVAL)) {
+		res = -2;
+#if 0
+		log_printf(0, server.log,"System Warning: Poll Event NVAL (0x%X) (fd=%i)!\n",
+				pfds[0].revents, fd);
+#endif
     	} else {
 #if 0
-		log_printf(0, server.log,"System Error: Poll Event Error no event (0x%X)!\n",
-				pfds[0].revents);
+		log_printf(0, server.log,"System Error: Poll Event Error no event (0x%X) (fd=%i)!\n",
+				pfds[0].revents,fd);
 #endif
 		res = -1;
 	}
@@ -1431,15 +1448,19 @@
 	unsigned char circuit_frame[1024];
 	char filename[100];
 	FILE *filed=NULL;
+	int loops=0;
 	
 	sangoma_api_hdr_t hdrframe;
 	memset(&hdrframe,0,sizeof(hdrframe));
 	memset(circuit_frame,0,sizeof(circuit_frame));
+
+	ms->sangoma_sock = sangoma_open_tdmapi_span_chan(woomera->span+1, woomera->chan+1);
 	
-	log_printf(1, server.log, "Media Loop Started %s\n", woomera->interface);
-	
-	if ((ms->sangoma_sock = sangoma_create_socket_by_name(woomera->interface, NULL)) < 0) {
-		log_printf(0, server.log, "WANPIPE Socket Error (%s) if=[%s]  [w%ig%i]\n", 
+	log_printf(1, server.log, "Media Loop Started %s fd=%i\n", 
+			woomera->interface,ms->sangoma_sock);
+
+	if (ms->sangoma_sock < 0) {
+		log_printf(0, server.log, "WANPIPE MEDIA Socket Error (%s) if=[%s]  [w%ig%i]\n", 
 			strerror(errno), woomera->interface, woomera->span+1, woomera->chan+1);
 		errs++;
 	} else {
@@ -1475,22 +1496,36 @@
 	
 	while ( woomera_test_flag(&server.master_connection, WFLAG_RUNNING) &&
 		!woomera_test_flag(woomera, WFLAG_MEDIA_END) && 
-		(res = waitfor_socket(ms->sangoma_sock, 10000, POLLERR | POLLIN)) > -1) {
+		((res = waitfor_socket(ms->sangoma_sock, 10000,  POLLERR | POLLIN)) >= -2)) {
 		
 		if (res == 0) {
 			//log_printf(4, server.log, "%s: TDM UDP Timeout !!!\n",
 			//		woomera->interface);
 			/* NENAD Timeout thus just continue */
+			continue; 
+		}
+
+		if (res == -2) {
+			close_socket(&ms->sangoma_sock);
+			ms->sangoma_sock = sangoma_open_tdmapi_span_chan(woomera->span+1, woomera->chan+1);
+			log_printf(0, server.log, "Media Loop Restart %s\n",
+				woomera->interface);
 			continue;
 		}
-		
+
+		if (res  < 0 ){
+			log_printf(0, server.log, "Media Loop Socket error %s\n",
+				woomera->interface);
+			break;
+		}
+	
 		res = sangoma_readmsg_socket(ms->sangoma_sock, 
 		                             &hdrframe, 
 					     sizeof(hdrframe), 
 					     circuit_frame, 
 					     sizeof(circuit_frame), 0);
 		if (res < 0) {
-			log_printf(0, server.log, "TDM Loop ReadMsg Error: %s\n", strerror(errno));
+			log_printf(0, server.log, "TDM Loop ReadMsg Error: %s\n", strerror(errno), woomera->interface);
 			break;
 		}
 
@@ -1505,17 +1540,21 @@
 		      	fprintf(filed,"\n");
 		}
 			
-		res = sangoma_sendmsg_socket(ms->sangoma_sock, 
+		sangoma_sendmsg_socket(ms->sangoma_sock, 
 		                             &hdrframe, 
 					     sizeof(hdrframe), 
 					     circuit_frame, 
 					     res, 0);
-					     
+		
+		res=0;
+
+		loops++;			     
 	} 
 
 	
 	if (res < 0) {
-		log_printf(2, server.log, "Media Loop: socket error !\n");
+		log_printf(2, server.log, "Media Loop: socket error %s  (fd=%i)!\n",
+				woomera->interface, ms->sangoma_sock);
 	}
 
 
@@ -1523,7 +1562,15 @@
 		fclose(filed);
 	}
 
-	log_printf(0, server.log, "Media Loop Finished %s\n", woomera->interface);
+	sleep(1);
+
+	close_socket(&ms->sangoma_sock);
+
+	log_printf(1, server.log, "Media Loop Finished %s Master=%i MediaEnd=%i Loops=%i\n", 
+				woomera->interface, 
+				woomera_test_flag(&server.master_connection, WFLAG_RUNNING), 
+				woomera_test_flag(woomera, WFLAG_MEDIA_END),loops); 
+	
 	return;
 	
 }
@@ -1562,6 +1609,8 @@
 	if (woomera->loop_tdm) {   
 		media_loop_run(ms);
 		ms->udp_sock=-1;
+		woomera_set_flag(woomera, WFLAG_HANGUP);
+		woomera_clear_flag(woomera, WFLAG_MEDIA_TDM_RUNNING);
 		goto media_thread_exit;	
 	} 	
 
@@ -1879,7 +1928,6 @@
 
 	media_session_free(ms);
 	
-	
 	log_printf(2, server.log, "MEDIA session for [%s] ended (ptr=%p)\n", 
 			woomera->interface,woomera);
 			
@@ -1921,13 +1969,28 @@
 
 	while ( woomera_test_flag(&server.master_connection, WFLAG_RUNNING) &&
 		!woomera_test_flag(woomera, WFLAG_MEDIA_END) && 
-		(res = waitfor_socket(ms->sangoma_sock, 10000, POLLERR | POLLIN)) > -1) {
+		(res = waitfor_socket(ms->sangoma_sock, 10000, POLLERR | POLLIN)) >= -2) {
 		
 		if (res == 0) {
 			//log_printf(4, server.log, "%s: TDM UDP Timeout !!!\n",
 			//		woomera->interface);
 			/* NENAD Timeout thus just continue */
 			continue;
+		} else 	if (res == -2) {
+			close_socket(&ms->sangoma_sock);
+			ms->sangoma_sock = sangoma_open_tdmapi_span_chan(woomera->span+1, woomera->chan+1);
+			if (ms->sangoma_sock < 0) {
+				log_printf(0, server.log, "Media TDM Restart Failed%s\n",
+						woomera->interface);
+				break;
+			} 
+			log_printf(0, server.log, "Media TDM Restart %s\n",
+				woomera->interface);
+ 			continue;
+ 		} else 	if (res < 0) {
+			log_printf(0, server.log, "Media TDM Sangoma Socket Error %s\n",
+				woomera->interface);
+			break;
 		}
 		
 		res = sangoma_readmsg_socket(ms->sangoma_sock, 
@@ -1960,6 +2023,7 @@
 		}
 #endif		
 	}
+
 	if (res < 0) {
 		log_printf(2, server.log, "Media TDM Thread: socket error !\n");
 	}
@@ -2615,16 +2679,18 @@
 		char *cause = woomera_message_header(wmsg, "cause");
 
 		woomera_set_cause(woomera, cause);
-		
+	
 		pthread_mutex_lock(&woomera->ms_lock);
 		if (woomera->ms) {
 			chan = woomera->ms->chan;
 			span = woomera->ms->span;
+#ifdef MEDIA_SOCK_SHUTDOWN	
 			shutdown(woomera->ms->sangoma_sock, SHUT_RDWR);
 			shutdown(woomera->ms->udp_sock, SHUT_RDWR);
+#endif
 		}
 		pthread_mutex_unlock(&woomera->ms_lock);
-			
+	
 		log_printf(3, woomera->log, "WOOMERA CMD: Hangup Received: [%s] MEDIA EXIST\n",
 				 	woomera->interface);
 		
@@ -3285,12 +3351,14 @@
 				 
 			} else {
 		
+#ifdef MEDIA_SOCK_SHUTDOWN	
 				pthread_mutex_lock(&woomera->ms_lock);
 				if (woomera->ms) {	
 					shutdown(woomera->ms->sangoma_sock, SHUT_RDWR);
 					shutdown(woomera->ms->udp_sock, SHUT_RDWR);
 				}
 				pthread_mutex_unlock(&woomera->ms_lock);
+#endif
 					
 				log_printf(0, server.log, "Event CALL START NACK on w%dg%d ptr=%p ms=%p\n",
 						woomera->span+1,woomera->chan+1,woomera,woomera->ms);
@@ -3504,12 +3572,14 @@
 			  return; 
 		}
 	
+#ifdef MEDIA_SOCK_SHUTDOWN	
 		pthread_mutex_lock(&woomera->ms_lock);
 		if (woomera->ms) {
 			shutdown(woomera->ms->sangoma_sock, SHUT_RDWR);
 			shutdown(woomera->ms->udp_sock, SHUT_RDWR);
 		}
 		pthread_mutex_unlock(&woomera->ms_lock);
+#endif
 		
 	
 		woomera_set_sig_cause(woomera,release_to_string(event->release_cause));
@@ -3827,15 +3897,19 @@
 	}
 
 	while (woomera_test_flag(&server.master_connection, WFLAG_RUNNING) &&
-           woomera_test_flag(&server.master_connection, WFLAG_MONITOR_RUNNING) &&
-	   woomera_test_flag(woomera, WFLAG_RUNNING) &&
-	   !woomera_test_flag(woomera, WFLAG_HANGUP) && 
-	   !master_reset) {
+               woomera_test_flag(&server.master_connection, WFLAG_MONITOR_RUNNING) &&
+	       !woomera_test_flag(woomera, WFLAG_MEDIA_END) &&
+	       !woomera_test_flag(woomera, WFLAG_HANGUP)) {
 	
 		sleep(1);				
 		continue;
 		
 	}
+
+	log_printf(2, server.log, "Woomera Session: For Loop Test exiting %s\n",woomera->interface);
+	
+
+
 	return;
 }
 
@@ -4183,7 +4257,7 @@
 		woomera->index_hold=0;
 	}
 	
-    	log_printf(2, woomera->log, "Thread Finished %u\n", (unsigned long) woomera->thread);
+    	log_printf(2, woomera->log, "Woomera Thread Finished %u\n", (unsigned long) woomera->thread);
    	close_socket(&woomera->socket);
    	woomera->socket=-1;
 
@@ -4390,6 +4464,13 @@
     if (1) {
 	int span,chan;
    	call_signal_event_t event;
+#if 0	
+	span=1;
+	chan=30;
+	event.span=span;
+	event.chan=chan;
+    	launch_woomera_loop_thread(&event);
+#else
 	for (span=0;span<8;span++) {
 		for (chan=0;chan<31;chan++) {
 			event.span=span;
@@ -4397,6 +4478,7 @@
     			launch_woomera_loop_thread(&event);
 		}
 	}
+#endif
     }
 #endif
     
