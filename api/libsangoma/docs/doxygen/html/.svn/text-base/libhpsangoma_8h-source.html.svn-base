<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>libhpsangoma: libhpsangoma.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.7 -->
<div class="tabs">
  <ul>
    <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
    <li><a href="annotated.html"><span>Classes</span></a></li>
    <li id="current"><a href="files.html"><span>Files</span></a></li>
  </ul></div>
<h1>libhpsangoma.h</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*****************************************************************************</span>
<a name="l00002"></a>00002 <span class="comment"> * libhpsangoma.h : Sangoma High Performance TDM API - Span Based Library</span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> * Author(s):   Nenad Corbic &lt;ncorbic@sangoma.com&gt;</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * Copyright:   (c) 2008 Nenad Corbic &lt;ncorbic@sangoma.com&gt;</span>
<a name="l00007"></a>00007 <span class="comment"> *</span>
<a name="l00008"></a>00008 <span class="comment"> *              This program is free software; you can redistribute it and/or</span>
<a name="l00009"></a>00009 <span class="comment"> *              modify it under the terms of the GNU General Public License</span>
<a name="l00010"></a>00010 <span class="comment"> *              as published by the Free Software Foundation; either version</span>
<a name="l00011"></a>00011 <span class="comment"> *              2 of the License, or (at your option) any later version.</span>
<a name="l00012"></a>00012 <span class="comment"> * ============================================================================</span>
<a name="l00013"></a>00013 <span class="comment"> */</span>
<a name="l00014"></a>00014 
<a name="l00015"></a>00015 <span class="preprocessor">#ifndef _LIB_HP_SNAGOMA_H</span>
<a name="l00016"></a>00016 <span class="preprocessor"></span><span class="preprocessor">#define _LIB_HP_SNAGOMA_H</span>
<a name="l00017"></a>00017 <span class="preprocessor"></span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="preprocessor">#ifdef WIN32</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span>
<a name="l00021"></a>00021 <span class="preprocessor">#error "WINDOWS NOT DEFINED"</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span>
<a name="l00023"></a>00023 <span class="preprocessor">#else</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span><span class="comment">/* L I N U X */</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;stdlib.h&gt;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;ctype.h&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;unistd.h&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;sys/time.h&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;sys/socket.h&gt;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;sys/ioctl.h&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;sys/types.h&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;sys/signal.h&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;sys/select.h&gt;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &lt;sys/wait.h&gt;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &lt;sys/resource.h&gt;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &lt;netinet/in.h&gt;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &lt;string.h&gt;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &lt;errno.h&gt;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &lt;fcntl.h&gt;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &lt;linux/if.h&gt;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &lt;poll.h&gt;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &lt;signal.h&gt;</span>
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 
<a name="l00046"></a>00046 <span class="preprocessor">#include &lt;linux/wanpipe_defines.h&gt;</span>
<a name="l00047"></a>00047 <span class="preprocessor">#include &lt;linux/wanpipe_common.h&gt;</span>
<a name="l00048"></a>00048 <span class="preprocessor">#include &lt;linux/wanpipe_cfg.h&gt;</span>
<a name="l00049"></a>00049 <span class="preprocessor">#include &lt;linux/wanpipe.h&gt;</span>
<a name="l00050"></a>00050 <span class="preprocessor">#include &lt;linux/if_wanpipe.h&gt;</span>
<a name="l00051"></a>00051 <span class="preprocessor">#include &lt;linux/sdla_aft_te1.h&gt;</span>
<a name="l00052"></a>00052 <span class="preprocessor">#endif</span>
<a name="l00053"></a>00053 <span class="preprocessor"></span>
<a name="l00054"></a>00054 <span class="preprocessor">#define SMG_HP_MAX_CHAN_DATA 1024</span>
<a name="l00055"></a>00055 <span class="preprocessor"></span><span class="preprocessor">#define SMG_HP_TDM_CHUNK_IDX_SZ 16</span>
<a name="l00056"></a>00056 <span class="preprocessor"></span><span class="preprocessor">#define SMG_HP_TDM_MAX_CHANS 31</span>
<a name="l00057"></a>00057 <span class="preprocessor"></span><span class="preprocessor">#define SMG_HP_MAX_SPAN_DATA (31*160)+32</span>
<a name="l00058"></a>00058 <span class="preprocessor"></span>
<a name="l00059"></a>00059 <span class="preprocessor">#define hp_tdmapi_rx_event_t api_rx_hdr_t</span>
<a name="l00060"></a>00060 <span class="preprocessor"></span><span class="preprocessor">#define hp_tdmapi_tx_event_t api_tx_hdr_t</span>
<a name="l00061"></a>00061 <span class="preprocessor"></span>
<a name="l00062"></a>00062 <span class="preprocessor">#define SANGOMA_HPTDM_VERSION 1</span>
<a name="l00063"></a>00063 <span class="preprocessor"></span>
<a name="l00064"></a>00064 <span class="comment">/*---------------------------------------------------------</span>
<a name="l00065"></a>00065 <span class="comment"> * PUBLIC DEFINITIONS</span>
<a name="l00066"></a>00066 <span class="comment"> */</span>
<a name="l00067"></a>00067 
<a name="l00068"></a>00068 
<a name="l00072"></a><a class="code" href="structsangoma__hptdm__span__reg.html">00072</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsangoma__hptdm__span__reg.html">sangoma_hptdm_span_reg</a>
<a name="l00073"></a>00073 {
<a name="l00075"></a><a class="code" href="structsangoma__hptdm__span__reg.html#23010e26a1e33a91d94fa7f22fe588c1">00075</a>         <span class="keywordtype">void</span> *<a class="code" href="structsangoma__hptdm__span__reg.html#23010e26a1e33a91d94fa7f22fe588c1">p</a>;
<a name="l00077"></a>00077         void (*<a class="code" href="structsangoma__hptdm__span__reg.html#7bf92eb6462caa381461bd9816b6a913">log</a>)(<span class="keywordtype">int</span> level, FILE *fp, <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">char</span> *func, <span class="keywordtype">int</span> line, <span class="keywordtype">char</span> *fmt, ...);
<a name="l00079"></a>00079         int (*<a class="code" href="structsangoma__hptdm__span__reg.html#30987897dd298e9f5e604e8c6cef9081">rx_event</a>)(<span class="keywordtype">void</span> *<a class="code" href="structsangoma__hptdm__span__reg.html#23010e26a1e33a91d94fa7f22fe588c1">p</a>, hp_tdmapi_rx_event_t *data);
<a name="l00080"></a>00080 }<a class="code" href="structsangoma__hptdm__span__reg.html">sangoma_hptdm_span_reg_t</a>;
<a name="l00081"></a>00081 
<a name="l00082"></a>00082 
<a name="l00086"></a><a class="code" href="structhp__tdm__chunk.html">00086</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structhp__tdm__chunk.html">hp_tdm_chunk</a>
<a name="l00087"></a>00087 {
<a name="l00089"></a><a class="code" href="structhp__tdm__chunk.html#499da7fa85efbeef88ef5e2a499e2191">00089</a>         <span class="keywordtype">int</span> <a class="code" href="structhp__tdm__chunk.html#499da7fa85efbeef88ef5e2a499e2191">init</a>;
<a name="l00091"></a><a class="code" href="structhp__tdm__chunk.html#985fc4301c6bc466ae05e2bc57b0d37c">00091</a>         <span class="keywordtype">int</span> <a class="code" href="structhp__tdm__chunk.html#985fc4301c6bc466ae05e2bc57b0d37c">len</a>;
<a name="l00093"></a><a class="code" href="structhp__tdm__chunk.html#959a167c4d18c409c56f500982026e2a">00093</a>         <span class="keywordtype">int</span> <a class="code" href="structhp__tdm__chunk.html#959a167c4d18c409c56f500982026e2a">offset</a>;
<a name="l00095"></a><a class="code" href="structhp__tdm__chunk.html#2ef17e4e751a2e523849c09a43727cb6">00095</a>         <span class="keywordtype">char</span> <a class="code" href="structhp__tdm__chunk.html#2ef17e4e751a2e523849c09a43727cb6">data</a>[SMG_HP_MAX_CHAN_DATA];
<a name="l00096"></a>00096 }<a class="code" href="structhp__tdm__chunk.html">hp_tmd_chunk_t</a>;
<a name="l00097"></a>00097 
<a name="l00101"></a><a class="code" href="structsangoma__hptdm__chan__reg.html">00101</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsangoma__hptdm__chan__reg.html">sangoma_hptdm_chan_reg</a>
<a name="l00102"></a>00102 {
<a name="l00104"></a><a class="code" href="structsangoma__hptdm__chan__reg.html#5c1df036c59cdb8dbf90bc5f39dab51e">00104</a>         <span class="keywordtype">void</span> *<a class="code" href="structsangoma__hptdm__chan__reg.html#5c1df036c59cdb8dbf90bc5f39dab51e">p</a>;
<a name="l00106"></a>00106         int (*<a class="code" href="structsangoma__hptdm__chan__reg.html#1caaaa25e6cafef313bca8ea29c6b612">rx_data</a>)(<span class="keywordtype">void</span> *<a class="code" href="structsangoma__hptdm__chan__reg.html#5c1df036c59cdb8dbf90bc5f39dab51e">p</a>, <span class="keywordtype">char</span> *data, <span class="keywordtype">int</span> len);
<a name="l00108"></a>00108         int (*<a class="code" href="structsangoma__hptdm__chan__reg.html#5e46cef596c1d6db9e3d92294527312f">rx_event</a>)(<span class="keywordtype">void</span> *<a class="code" href="structsangoma__hptdm__chan__reg.html#5c1df036c59cdb8dbf90bc5f39dab51e">p</a>, hp_tdmapi_rx_event_t *data);
<a name="l00109"></a>00109 
<a name="l00110"></a>00110 }<a class="code" href="structsangoma__hptdm__chan__reg.html">sangoma_hptdm_chan_reg_t</a>;
<a name="l00111"></a>00111 
<a name="l00115"></a><a class="code" href="structsangoma__hptdm__chan.html">00115</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsangoma__hptdm__chan.html">sangoma_hptdm_chan</a>
<a name="l00116"></a>00116 {
<a name="l00118"></a><a class="code" href="structsangoma__hptdm__chan.html#7a43df2f36462e48e1104704fe38ccc1">00118</a>         <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__chan.html#7a43df2f36462e48e1104704fe38ccc1">init</a>;
<a name="l00119"></a>00119 
<a name="l00121"></a><a class="code" href="structsangoma__hptdm__chan.html#5e5053195c086b7e5bfa683573484e8c">00121</a>         <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__chan.html#5e5053195c086b7e5bfa683573484e8c">chan_no</a>;
<a name="l00122"></a>00122 
<a name="l00124"></a><a class="code" href="structsangoma__hptdm__chan.html#1604a853c601891fe97c0e1dfef97430">00124</a>         <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__chan.html#1604a853c601891fe97c0e1dfef97430">span_no</a>;
<a name="l00125"></a>00125 
<a name="l00127"></a><a class="code" href="structsangoma__hptdm__chan.html#bb56d955a8e925149cbd28d4fd2dbb6a">00127</a>         <span class="keywordtype">void</span> *<a class="code" href="structsangoma__hptdm__chan.html#bb56d955a8e925149cbd28d4fd2dbb6a">span</a>;
<a name="l00128"></a>00128 
<a name="l00130"></a><a class="code" href="structsangoma__hptdm__chan.html#c8d95d0d59d5f34fd70a9d700f6896f0">00130</a>         <a class="code" href="structhp__tdm__chunk.html">hp_tmd_chunk_t</a> <a class="code" href="structsangoma__hptdm__chan.html#c8d95d0d59d5f34fd70a9d700f6896f0">rx_chunk</a>;
<a name="l00131"></a>00131 
<a name="l00133"></a><a class="code" href="structsangoma__hptdm__chan.html#7e12d6e901b165fc5589bd9b88cf15fc">00133</a>         <a class="code" href="structhp__tdm__chunk.html">hp_tmd_chunk_t</a> <a class="code" href="structsangoma__hptdm__chan.html#7e12d6e901b165fc5589bd9b88cf15fc">tx_idx</a>[SMG_HP_TDM_CHUNK_IDX_SZ];
<a name="l00134"></a>00134 
<a name="l00136"></a><a class="code" href="structsangoma__hptdm__chan.html#14b1cadb6d30cb61a7fcd163f72a417c">00136</a>         <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__chan.html#14b1cadb6d30cb61a7fcd163f72a417c">tx_idx_in</a>;
<a name="l00137"></a>00137 
<a name="l00139"></a><a class="code" href="structsangoma__hptdm__chan.html#f006a684b96712e6ad2a14b13a2665cc">00139</a>         <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__chan.html#f006a684b96712e6ad2a14b13a2665cc">tx_idx_out</a>;
<a name="l00140"></a>00140 
<a name="l00142"></a>00142         int (*<a class="code" href="structsangoma__hptdm__chan.html#40fbdc65035c69d876d4a1a806e5a5db">push</a>)(<span class="keyword">struct </span><a class="code" href="structsangoma__hptdm__chan.html">sangoma_hptdm_chan</a> *, <span class="keywordtype">char</span> *data, <span class="keywordtype">int</span> len);
<a name="l00143"></a>00143 
<a name="l00145"></a><a class="code" href="structsangoma__hptdm__chan.html#0a79dfe92034591ad20bd1656e585776">00145</a>         <a class="code" href="structsangoma__hptdm__chan__reg.html">sangoma_hptdm_chan_reg_t</a> <a class="code" href="structsangoma__hptdm__chan.html#0a79dfe92034591ad20bd1656e585776">chan_reg</a>;
<a name="l00146"></a>00146 
<a name="l00147"></a>00147 }<a class="code" href="structsangoma__hptdm__chan.html">sangoma_hptdm_chan_t</a>;
<a name="l00148"></a>00148 
<a name="l00157"></a><a class="code" href="structsangoma__hptdm__chan__map.html">00157</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsangoma__hptdm__chan__map.html">sangoma_hptdm_chan_map</a>
<a name="l00158"></a>00158 {
<a name="l00162"></a><a class="code" href="structsangoma__hptdm__chan__map.html#895d7b39838f0245ac6829cd72489818">00162</a>         <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__chan__map.html#895d7b39838f0245ac6829cd72489818">chan_no_hw</a>;
<a name="l00163"></a>00163 
<a name="l00165"></a><a class="code" href="structsangoma__hptdm__chan__map.html#65a3733433aa931afb5002994bb4a4cf">00165</a>         <a class="code" href="structsangoma__hptdm__chan.html">sangoma_hptdm_chan_t</a> <a class="code" href="structsangoma__hptdm__chan__map.html#65a3733433aa931afb5002994bb4a4cf">chan</a>;
<a name="l00166"></a>00166 
<a name="l00167"></a>00167 }<a class="code" href="structsangoma__hptdm__chan__map.html">sangoma_hptdm_chan_map_t</a>;
<a name="l00168"></a>00168 
<a name="l00169"></a>00169 
<a name="l00173"></a><a class="code" href="structsangoma__hptdm__span.html">00173</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsangoma__hptdm__span.html">sangoma_hptdm_span</a>
<a name="l00174"></a>00174 {
<a name="l00176"></a><a class="code" href="structsangoma__hptdm__span.html#6cacbe722a1744a26412799552186cb5">00176</a>         <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__span.html#6cacbe722a1744a26412799552186cb5">init</a>;
<a name="l00177"></a>00177 
<a name="l00179"></a><a class="code" href="structsangoma__hptdm__span.html#6ddf12c36674099ef529234d9057e5ef">00179</a>         <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__span.html#6ddf12c36674099ef529234d9057e5ef">span_no</a>;
<a name="l00180"></a>00180 
<a name="l00182"></a><a class="code" href="structsangoma__hptdm__span.html#ea2f0206a546ae74962f84e482f63276">00182</a>         <span class="keywordtype">char</span> <a class="code" href="structsangoma__hptdm__span.html#ea2f0206a546ae74962f84e482f63276">if_name</a>[100];
<a name="l00183"></a>00183 
<a name="l00185"></a><a class="code" href="structsangoma__hptdm__span.html#2beb9a0490cfda191875bbaf58e79453">00185</a>         <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__span.html#2beb9a0490cfda191875bbaf58e79453">sock</a>;
<a name="l00186"></a>00186 
<a name="l00188"></a><a class="code" href="structsangoma__hptdm__span.html#c8ea25063a09267bbe22084e6cb7a32c">00188</a>         <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__span.html#c8ea25063a09267bbe22084e6cb7a32c">chunk_sz</a>;
<a name="l00189"></a>00189 
<a name="l00191"></a><a class="code" href="structsangoma__hptdm__span.html#9efd139e4214d62b07060147acfd2849">00191</a>         <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__span.html#9efd139e4214d62b07060147acfd2849">max_chans</a>;
<a name="l00192"></a>00192 
<a name="l00194"></a><a class="code" href="structsangoma__hptdm__span.html#c3bad0a028665de4385f792bf0be3c55">00194</a>         <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__span.html#c3bad0a028665de4385f792bf0be3c55">tx_size</a>;
<a name="l00195"></a>00195 
<a name="l00197"></a><a class="code" href="structsangoma__hptdm__span.html#15230551ba1429679eda4ac11cf7ebf7">00197</a>         <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="structsangoma__hptdm__span.html#15230551ba1429679eda4ac11cf7ebf7">idle</a>;
<a name="l00198"></a>00198 
<a name="l00200"></a><a class="code" href="structsangoma__hptdm__span.html#ee171f9edaddbe0c76c56c151d0ca18e">00200</a>         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__span.html#ee171f9edaddbe0c76c56c151d0ca18e">timeslot_cfg</a>;
<a name="l00201"></a>00201 
<a name="l00203"></a><a class="code" href="structsangoma__hptdm__span.html#fb940d35a9dc0a91871be3100c0a90f5">00203</a>         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__span.html#fb940d35a9dc0a91871be3100c0a90f5">hwcoding</a>;
<a name="l00204"></a>00204 
<a name="l00206"></a><a class="code" href="structsangoma__hptdm__span.html#63de8342af835a970d8105c2fe5282dc">00206</a>         <a class="code" href="structsangoma__hptdm__chan__map.html">sangoma_hptdm_chan_map_t</a> <a class="code" href="structsangoma__hptdm__span.html#63de8342af835a970d8105c2fe5282dc">chan_idx</a>[SMG_HP_TDM_MAX_CHANS];
<a name="l00207"></a>00207 
<a name="l00209"></a><a class="code" href="structsangoma__hptdm__span.html#917ee1efbde4fef0550aff1b1a5ae5cf">00209</a>         <span class="keywordtype">char</span> <a class="code" href="structsangoma__hptdm__span.html#917ee1efbde4fef0550aff1b1a5ae5cf">rx_data</a>[SMG_HP_MAX_SPAN_DATA];
<a name="l00210"></a>00210 
<a name="l00212"></a><a class="code" href="structsangoma__hptdm__span.html#88165ecfc96fcdc432154d7cdc93b7aa">00212</a>         <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__span.html#88165ecfc96fcdc432154d7cdc93b7aa">rx_len</a>;
<a name="l00213"></a>00213 
<a name="l00215"></a><a class="code" href="structsangoma__hptdm__span.html#79ae4bccb7e92866e20e816a629c9ce7">00215</a>         <span class="keywordtype">char</span> <a class="code" href="structsangoma__hptdm__span.html#79ae4bccb7e92866e20e816a629c9ce7">tx_data</a>[SMG_HP_MAX_SPAN_DATA];
<a name="l00216"></a>00216 
<a name="l00218"></a><a class="code" href="structsangoma__hptdm__span.html#70ddcf83aeb3c5f7a4792fa50042bf42">00218</a>         <span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__span.html#70ddcf83aeb3c5f7a4792fa50042bf42">tx_len</a>;
<a name="l00219"></a>00219 
<a name="l00221"></a><a class="code" href="structsangoma__hptdm__span.html#3fe0c377ed097e61a98b9b278a2ec870">00221</a>         <a class="code" href="structsangoma__hptdm__span__reg.html">sangoma_hptdm_span_reg_t</a> <a class="code" href="structsangoma__hptdm__span.html#3fe0c377ed097e61a98b9b278a2ec870">span_reg</a>;
<a name="l00222"></a>00222 
<a name="l00224"></a><a class="code" href="structsangoma__hptdm__span.html#000b5bc46e96a6ce6ce0601b262758a4">00224</a>         wan_if_cfg_t <a class="code" href="structsangoma__hptdm__span.html#000b5bc46e96a6ce6ce0601b262758a4">span_cfg</a>;
<a name="l00225"></a>00225 
<a name="l00227"></a><a class="code" href="structsangoma__hptdm__span.html#06aa115c3c6f6cf024484fdd6bf1bff4">00227</a>         wan_udp_hdr_t <a class="code" href="structsangoma__hptdm__span.html#06aa115c3c6f6cf024484fdd6bf1bff4">wan_udp</a>;
<a name="l00228"></a>00228 
<a name="l00235"></a>00235         int (*<a class="code" href="structsangoma__hptdm__span.html#01c3eefc1ed1e4482093deba3d167806">open_chan</a>)(<span class="keyword">struct </span><a class="code" href="structsangoma__hptdm__span.html">sangoma_hptdm_span</a> *span,
<a name="l00236"></a>00236                               <a class="code" href="structsangoma__hptdm__chan__reg.html">sangoma_hptdm_chan_reg_t</a> *chan_reg,
<a name="l00237"></a>00237                               <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> chan_no,
<a name="l00238"></a>00238                               <a class="code" href="structsangoma__hptdm__chan.html">sangoma_hptdm_chan_t</a> **chan_ptr);
<a name="l00239"></a>00239 
<a name="l00243"></a>00243         int (*<a class="code" href="structsangoma__hptdm__span.html#04ab1744bee8d7333303e8da52c46b74">close_chan</a>)(<a class="code" href="structsangoma__hptdm__chan.html">sangoma_hptdm_chan_t</a> *chan);
<a name="l00244"></a>00244 
<a name="l00247"></a>00247         int (*<a class="code" href="structsangoma__hptdm__span.html#3a41fea372d8c4c8318f842134b93b3e">is_chan_closed</a>)(<a class="code" href="structsangoma__hptdm__chan.html">sangoma_hptdm_chan_t</a> *chan);
<a name="l00248"></a>00248 
<a name="l00259"></a>00259         int (*<a class="code" href="structsangoma__hptdm__span.html#df409d25fbe30c631146616298d715b8">run_span</a>)(<span class="keyword">struct </span><a class="code" href="structsangoma__hptdm__span.html">sangoma_hptdm_span</a> *span);
<a name="l00260"></a>00260 
<a name="l00263"></a>00263         int (*<a class="code" href="structsangoma__hptdm__span.html#374c4f8d8a6df82f7a22ee777d3c0cc9">close_span</a>)(<span class="keyword">struct </span><a class="code" href="structsangoma__hptdm__span.html">sangoma_hptdm_span</a> *span);
<a name="l00264"></a>00264 
<a name="l00269"></a>00269         int (*<a class="code" href="structsangoma__hptdm__span.html#c40f099ec1797a9188596912cd9bc545">event_ctrl</a>)(<span class="keyword">struct </span><a class="code" href="structsangoma__hptdm__span.html">sangoma_hptdm_span</a> *span, hp_tdmapi_tx_event_t *event);
<a name="l00270"></a>00270 
<a name="l00275"></a>00275         int (*<a class="code" href="structsangoma__hptdm__span.html#96b3b3ada170989b083646b3f8e4004b">get_cfg</a>)(<span class="keyword">struct </span><a class="code" href="structsangoma__hptdm__span.html">sangoma_hptdm_span</a> *span, wan_if_cfg_t *cfg);
<a name="l00276"></a>00276 
<a name="l00277"></a>00277 
<a name="l00278"></a>00278 }<a class="code" href="structsangoma__hptdm__span.html">sangoma_hptdm_span_t</a>;
<a name="l00279"></a>00279 
<a name="l00280"></a>00280 <span class="comment">/*---------------------------------------------------------</span>
<a name="l00281"></a>00281 <span class="comment"> * PUBLIC FUNCTIONS</span>
<a name="l00282"></a>00282 <span class="comment"> */</span>
<a name="l00283"></a>00283 
<a name="l00291"></a>00291 <span class="comment">/* Initialize and Configure a Span  */</span>
<a name="l00292"></a>00292 <span class="preprocessor">#define sangoma_hptdm_api_span_init(span,cfg) __sangoma_hptdm_api_span_init(span, cfg, SANGOMA_HPTDM_VERSION);</span>
<a name="l00293"></a>00293 <span class="preprocessor"></span>
<a name="l00305"></a>00305  <span class="comment">/*</span>
<a name="l00306"></a>00306 <span class="comment">  * The __sangoma_hptdm_api_span_init() function must NOT be called directly!</span>
<a name="l00307"></a>00307 <span class="comment">  * One MUST use defined sangoma_hptdm_api_span_init() macro instead</span>
<a name="l00308"></a>00308 <span class="comment">  */</span>
<a name="l00309"></a>00309 <span class="keyword">extern</span> <a class="code" href="structsangoma__hptdm__span.html">sangoma_hptdm_span_t</a> * __sangoma_hptdm_api_span_init(<span class="keywordtype">int</span> <a class="code" href="structsangoma__hptdm__span.html#6ddf12c36674099ef529234d9057e5ef">span_no</a>, <a class="code" href="structsangoma__hptdm__span__reg.html">sangoma_hptdm_span_reg_t</a> *cfg, <span class="keywordtype">int</span> version);
<a name="l00310"></a>00310 
<a name="l00311"></a>00311 
<a name="l00317"></a>00317 <span class="keyword">extern</span> <span class="keywordtype">int</span> sangoma_hptdm_api_span_free(<a class="code" href="structsangoma__hptdm__span.html">sangoma_hptdm_span_t</a> *span);
<a name="l00318"></a>00318 
<a name="l00319"></a>00319 
<a name="l00320"></a>00320 
<a name="l00321"></a>00321 
<a name="l00322"></a>00322 
<a name="l00323"></a>00323 <span class="preprocessor">#endif</span>
<a name="l00324"></a>00324 <span class="preprocessor"></span>
</pre></div><hr size="1"><address style="align: right;"><small>Generated on Sun Aug 17 23:56:55 2008 for libhpsangoma by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.4.7 </small></address>
</body>
</html>
